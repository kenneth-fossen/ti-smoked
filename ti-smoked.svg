<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1238" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1221.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1221.00"> </text><svg id="frames" x="10" width="1180" total_samples="71"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 1.41%)</title><rect x="0.0000%" y="1157" width="1.4085%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 1.41%)</title><rect x="0.0000%" y="1141" width="1.4085%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibraryApi&gt;::get_schema::_{{closure}} (1 samples, 1.41%)</title><rect x="1.4085%" y="1045" width="1.4085%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.6585%" y="1055.50"></text></g><g><title>Security`SSLRecordServiceWriteQueueInternal (1 samples, 1.41%)</title><rect x="2.8169%" y="757" width="1.4085%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="3.0669%" y="767.50"></text></g><g><title>ti-smoked`security_framework::secure_transport::write_func (1 samples, 1.41%)</title><rect x="2.8169%" y="741" width="1.4085%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="3.0669%" y="751.50"></text></g><g><title>ti-smoked`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 1.41%)</title><rect x="2.8169%" y="725" width="1.4085%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="3.0669%" y="735.50"></text></g><g><title>ti-smoked`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 1.41%)</title><rect x="2.8169%" y="709" width="1.4085%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="3.0669%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 1.41%)</title><rect x="2.8169%" y="693" width="1.4085%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="3.0669%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips_ws (1 samples, 1.41%)</title><rect x="4.2254%" y="629" width="1.4085%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="4.4754%" y="639.50"></text></g><g><title>libcorecrypto.dylib`generate (1 samples, 1.41%)</title><rect x="4.2254%" y="613" width="1.4085%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="4.4754%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccrng_crypto_generate (1 samples, 1.41%)</title><rect x="4.2254%" y="597" width="1.4085%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="4.4754%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_read (1 samples, 1.41%)</title><rect x="4.2254%" y="581" width="1.4085%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="4.4754%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_tree_read (1 samples, 1.41%)</title><rect x="4.2254%" y="565" width="1.4085%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="4.4754%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccrng_schedule_timer_read (1 samples, 1.41%)</title><rect x="4.2254%" y="549" width="1.4085%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="4.4754%" y="559.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 1.41%)</title><rect x="4.2254%" y="533" width="1.4085%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="4.4754%" y="543.50"></text></g><g><title>libsystem_c.dylib`_mach_boottime_usec (1 samples, 1.41%)</title><rect x="4.2254%" y="517" width="1.4085%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="4.4754%" y="527.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (1 samples, 1.41%)</title><rect x="4.2254%" y="501" width="1.4085%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="4.4754%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 1.41%)</title><rect x="4.2254%" y="485" width="1.4085%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="4.4754%" y="495.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (2 samples, 2.82%)</title><rect x="4.2254%" y="757" width="2.8169%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="2"/><text x="4.4754%" y="767.50">li..</text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (2 samples, 2.82%)</title><rect x="4.2254%" y="741" width="2.8169%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="2"/><text x="4.4754%" y="751.50">li..</text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (2 samples, 2.82%)</title><rect x="4.2254%" y="725" width="2.8169%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="2"/><text x="4.4754%" y="735.50">li..</text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (2 samples, 2.82%)</title><rect x="4.2254%" y="709" width="2.8169%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="2"/><text x="4.4754%" y="719.50">li..</text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (2 samples, 2.82%)</title><rect x="4.2254%" y="693" width="2.8169%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="2"/><text x="4.4754%" y="703.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key (2 samples, 2.82%)</title><rect x="4.2254%" y="677" width="2.8169%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="2"/><text x="4.4754%" y="687.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (2 samples, 2.82%)</title><rect x="4.2254%" y="661" width="2.8169%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="2"/><text x="4.4754%" y="671.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (2 samples, 2.82%)</title><rect x="4.2254%" y="645" width="2.8169%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="2"/><text x="4.4754%" y="655.50">li..</text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check_ws (1 samples, 1.41%)</title><rect x="5.6338%" y="629" width="1.4085%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="5.8838%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_verify_internal_with_base_ws (1 samples, 1.41%)</title><rect x="5.6338%" y="613" width="1.4085%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="5.8838%" y="623.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_default_ws (1 samples, 1.41%)</title><rect x="5.6338%" y="597" width="1.4085%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="5.8838%" y="607.50"></text></g><g><title>libcorecrypto.dylib`cczp_inv_update_ws (1 samples, 1.41%)</title><rect x="5.6338%" y="581" width="1.4085%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="1"/><text x="5.8838%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.41%)</title><rect x="5.6338%" y="565" width="1.4085%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="5.8838%" y="575.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 1.41%)</title><rect x="7.0423%" y="469" width="1.4085%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="7.2923%" y="479.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 1.41%)</title><rect x="7.0423%" y="453" width="1.4085%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="7.2923%" y="463.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 1.41%)</title><rect x="7.0423%" y="437" width="1.4085%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="7.2923%" y="447.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 1.41%)</title><rect x="7.0423%" y="421" width="1.4085%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="7.2923%" y="431.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 1.41%)</title><rect x="7.0423%" y="405" width="1.4085%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="7.2923%" y="415.50"></text></g><g><title>Security`Security::MetaRecord::unpackRecord (1 samples, 1.41%)</title><rect x="7.0423%" y="389" width="1.4085%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="7.2923%" y="399.50"></text></g><g><title>Security`Security::MetaAttribute::unpackAttribute (1 samples, 1.41%)</title><rect x="7.0423%" y="373" width="1.4085%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="7.2923%" y="383.50"></text></g><g><title>Security`Security::MDSAttrParser::parseAttrs (1 samples, 1.41%)</title><rect x="8.4507%" y="421" width="1.4085%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="1"/><text x="8.7007%" y="431.50"></text></g><g><title>CoreFoundation`CFBundleCopyResourceURLsOfType (1 samples, 1.41%)</title><rect x="8.4507%" y="405" width="1.4085%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="1"/><text x="8.7007%" y="415.50"></text></g><g><title>CoreFoundation`_CFBundleCopyFindResources (1 samples, 1.41%)</title><rect x="8.4507%" y="389" width="1.4085%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="1"/><text x="8.7007%" y="399.50"></text></g><g><title>CoreFoundation`_copyResourceURLsFromBundle (1 samples, 1.41%)</title><rect x="8.4507%" y="373" width="1.4085%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="1"/><text x="8.7007%" y="383.50"></text></g><g><title>CoreFoundation`_copyQueryTable (1 samples, 1.41%)</title><rect x="8.4507%" y="357" width="1.4085%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="1"/><text x="8.7007%" y="367.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLanguageSearchListInBundle (1 samples, 1.41%)</title><rect x="8.4507%" y="341" width="1.4085%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="1"/><text x="8.7007%" y="351.50"></text></g><g><title>CoreFoundation`_CFBundleCopyBundleLocalizations (1 samples, 1.41%)</title><rect x="8.4507%" y="325" width="1.4085%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="1"/><text x="8.7007%" y="335.50"></text></g><g><title>CoreFoundation`_copyBundleLocalizationsFromResources (1 samples, 1.41%)</title><rect x="8.4507%" y="309" width="1.4085%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="1"/><text x="8.7007%" y="319.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLProjDirectoriesForURL (1 samples, 1.41%)</title><rect x="8.4507%" y="293" width="1.4085%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="1"/><text x="8.7007%" y="303.50"></text></g><g><title>CoreFoundation`_CFIterateDirectory (1 samples, 1.41%)</title><rect x="8.4507%" y="277" width="1.4085%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="1"/><text x="8.7007%" y="287.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (1 samples, 1.41%)</title><rect x="8.4507%" y="261" width="1.4085%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="1"/><text x="8.7007%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (1 samples, 1.41%)</title><rect x="8.4507%" y="245" width="1.4085%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="1"/><text x="8.7007%" y="255.50"></text></g><g><title>Security`Security::AtomicBufferedFile::read (1 samples, 1.41%)</title><rect x="9.8592%" y="309" width="1.4085%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="1"/><text x="10.1092%" y="319.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (1 samples, 1.41%)</title><rect x="9.8592%" y="293" width="1.4085%" height="15" fill="rgb(250,213,24)" fg:x="7" fg:w="1"/><text x="10.1092%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 1.41%)</title><rect x="9.8592%" y="277" width="1.4085%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="1"/><text x="10.1092%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 1.41%)</title><rect x="9.8592%" y="261" width="1.4085%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="1"/><text x="10.1092%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 1.41%)</title><rect x="9.8592%" y="245" width="1.4085%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="1"/><text x="10.1092%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 1.41%)</title><rect x="9.8592%" y="229" width="1.4085%" height="15" fill="rgb(251,118,11)" fg:x="7" fg:w="1"/><text x="10.1092%" y="239.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (4 samples, 5.63%)</title><rect x="7.0423%" y="661" width="5.6338%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="4"/><text x="7.2923%" y="671.50">Securit..</text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (4 samples, 5.63%)</title><rect x="7.0423%" y="645" width="5.6338%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="4"/><text x="7.2923%" y="655.50">Securit..</text></g><g><title>Security`Security::KeychainCore::Certificate::clHandle (4 samples, 5.63%)</title><rect x="7.0423%" y="629" width="5.6338%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="4"/><text x="7.2923%" y="639.50">Securit..</text></g><g><title>Security`Security::CssmClient::AttachmentImpl::activate (4 samples, 5.63%)</title><rect x="7.0423%" y="613" width="5.6338%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="4"/><text x="7.2923%" y="623.50">Securit..</text></g><g><title>Security`Security::CssmClient::ModuleImpl::activate (4 samples, 5.63%)</title><rect x="7.0423%" y="597" width="5.6338%" height="15" fill="rgb(248,47,43)" fg:x="5" fg:w="4"/><text x="7.2923%" y="607.50">Securit..</text></g><g><title>Security`CSSM_ModuleLoad (4 samples, 5.63%)</title><rect x="7.0423%" y="581" width="5.6338%" height="15" fill="rgb(221,10,30)" fg:x="5" fg:w="4"/><text x="7.2923%" y="591.50">Securit..</text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::fetch (4 samples, 5.63%)</title><rect x="7.0423%" y="565" width="5.6338%" height="15" fill="rgb(210,229,1)" fg:x="5" fg:w="4"/><text x="7.2923%" y="575.50">Securit..</text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (4 samples, 5.63%)</title><rect x="7.0423%" y="549" width="5.6338%" height="15" fill="rgb(222,148,37)" fg:x="5" fg:w="4"/><text x="7.2923%" y="559.50">Securit..</text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (4 samples, 5.63%)</title><rect x="7.0423%" y="533" width="5.6338%" height="15" fill="rgb(234,67,33)" fg:x="5" fg:w="4"/><text x="7.2923%" y="543.50">Securit..</text></g><g><title>Security`Security::MDSClient::Directory::cdsa (4 samples, 5.63%)</title><rect x="7.0423%" y="517" width="5.6338%" height="15" fill="rgb(247,98,35)" fg:x="5" fg:w="4"/><text x="7.2923%" y="527.50">Securit..</text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (4 samples, 5.63%)</title><rect x="7.0423%" y="501" width="5.6338%" height="15" fill="rgb(247,138,52)" fg:x="5" fg:w="4"/><text x="7.2923%" y="511.50">Securit..</text></g><g><title>Security`Security::MDSSession::DbOpen (4 samples, 5.63%)</title><rect x="7.0423%" y="485" width="5.6338%" height="15" fill="rgb(213,79,30)" fg:x="5" fg:w="4"/><text x="7.2923%" y="495.50">Securit..</text></g><g><title>Security`Security::MDSSession::updateDataBases (3 samples, 4.23%)</title><rect x="8.4507%" y="469" width="4.2254%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="3"/><text x="8.7007%" y="479.50">Secur..</text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (3 samples, 4.23%)</title><rect x="8.4507%" y="453" width="4.2254%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="3"/><text x="8.7007%" y="463.50">Secur..</text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundle (3 samples, 4.23%)</title><rect x="8.4507%" y="437" width="4.2254%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="3"/><text x="8.7007%" y="447.50">Secur..</text></g><g><title>Security`Security::MDSSession::DbFilesInfo::directDbHand (2 samples, 2.82%)</title><rect x="9.8592%" y="421" width="2.8169%" height="15" fill="rgb(244,35,45)" fg:x="7" fg:w="2"/><text x="10.1092%" y="431.50">Se..</text></g><g><title>Security`Security::MDSSession::dbOpen (2 samples, 2.82%)</title><rect x="9.8592%" y="405" width="2.8169%" height="15" fill="rgb(251,115,12)" fg:x="7" fg:w="2"/><text x="10.1092%" y="415.50">Se..</text></g><g><title>Security`Security::DatabaseSession::DbOpen (2 samples, 2.82%)</title><rect x="9.8592%" y="389" width="2.8169%" height="15" fill="rgb(240,54,50)" fg:x="7" fg:w="2"/><text x="10.1092%" y="399.50">Se..</text></g><g><title>Security`Security::DatabaseManager::dbOpen (2 samples, 2.82%)</title><rect x="9.8592%" y="373" width="2.8169%" height="15" fill="rgb(233,84,52)" fg:x="7" fg:w="2"/><text x="10.1092%" y="383.50">Se..</text></g><g><title>Security`Security::Database::_dbOpen (2 samples, 2.82%)</title><rect x="9.8592%" y="357" width="2.8169%" height="15" fill="rgb(207,117,47)" fg:x="7" fg:w="2"/><text x="10.1092%" y="367.50">Se..</text></g><g><title>Security`Security::AppleDatabase::dbOpen (2 samples, 2.82%)</title><rect x="9.8592%" y="341" width="2.8169%" height="15" fill="rgb(249,43,39)" fg:x="7" fg:w="2"/><text x="10.1092%" y="351.50">Se..</text></g><g><title>Security`Security::DbModifier::getDbVersion (2 samples, 2.82%)</title><rect x="9.8592%" y="325" width="2.8169%" height="15" fill="rgb(209,38,44)" fg:x="7" fg:w="2"/><text x="10.1092%" y="335.50">Se..</text></g><g><title>Security`Security::MetaRecord::attributeIndex (1 samples, 1.41%)</title><rect x="11.2676%" y="309" width="1.4085%" height="15" fill="rgb(236,212,23)" fg:x="8" fg:w="1"/><text x="11.5176%" y="319.50"></text></g><g><title>Security`SSLHandshake (8 samples, 11.27%)</title><rect x="2.8169%" y="789" width="11.2676%" height="15" fill="rgb(242,79,21)" fg:x="2" fg:w="8"/><text x="3.0669%" y="799.50">Security`SSLHands..</text></g><g><title>Security`SSLHandshakeProceed (8 samples, 11.27%)</title><rect x="2.8169%" y="773" width="11.2676%" height="15" fill="rgb(211,96,35)" fg:x="2" fg:w="8"/><text x="3.0669%" y="783.50">Security`SSLHands..</text></g><g><title>libcoretls.dylib`tls_handshake_process (5 samples, 7.04%)</title><rect x="7.0423%" y="757" width="7.0423%" height="15" fill="rgb(253,215,40)" fg:x="5" fg:w="5"/><text x="7.2923%" y="767.50">libcoretl..</text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (5 samples, 7.04%)</title><rect x="7.0423%" y="741" width="7.0423%" height="15" fill="rgb(211,81,21)" fg:x="5" fg:w="5"/><text x="7.2923%" y="751.50">libcoretl..</text></g><g><title>Security`tls_handshake_message_callback (5 samples, 7.04%)</title><rect x="7.0423%" y="725" width="7.0423%" height="15" fill="rgb(208,190,38)" fg:x="5" fg:w="5"/><text x="7.2923%" y="735.50">Security`..</text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (5 samples, 7.04%)</title><rect x="7.0423%" y="709" width="7.0423%" height="15" fill="rgb(235,213,38)" fg:x="5" fg:w="5"/><text x="7.2923%" y="719.50">libcoretl..</text></g><g><title>Security`SecTrustCopyPublicKey (5 samples, 7.04%)</title><rect x="7.0423%" y="693" width="7.0423%" height="15" fill="rgb(237,122,38)" fg:x="5" fg:w="5"/><text x="7.2923%" y="703.50">Security`..</text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (5 samples, 7.04%)</title><rect x="7.0423%" y="677" width="7.0423%" height="15" fill="rgb(244,218,35)" fg:x="5" fg:w="5"/><text x="7.2923%" y="687.50">Security`..</text></g><g><title>Security`countLegacyAPI (1 samples, 1.41%)</title><rect x="12.6761%" y="661" width="1.4085%" height="15" fill="rgb(240,68,47)" fg:x="9" fg:w="1"/><text x="12.9261%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.41%)</title><rect x="12.6761%" y="645" width="1.4085%" height="15" fill="rgb(210,16,53)" fg:x="9" fg:w="1"/><text x="12.9261%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.41%)</title><rect x="12.6761%" y="629" width="1.4085%" height="15" fill="rgb(235,124,12)" fg:x="9" fg:w="1"/><text x="12.9261%" y="639.50"></text></g><g><title>Security`__setup_block_invoke (1 samples, 1.41%)</title><rect x="12.6761%" y="613" width="1.4085%" height="15" fill="rgb(224,169,11)" fg:x="9" fg:w="1"/><text x="12.9261%" y="623.50"></text></g><g><title>libsystem_featureflags.dylib`_os_feature_enabled_impl (1 samples, 1.41%)</title><rect x="12.6761%" y="597" width="1.4085%" height="15" fill="rgb(250,166,2)" fg:x="9" fg:w="1"/><text x="12.9261%" y="607.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertyForKey (1 samples, 1.41%)</title><rect x="14.0845%" y="741" width="1.4085%" height="15" fill="rgb(242,216,29)" fg:x="10" fg:w="1"/><text x="14.3345%" y="751.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKeyInternal(__CFURL const*, __CFString const*, void*, void*, __CFError**, unsigned char) (1 samples, 1.41%)</title><rect x="14.0845%" y="725" width="1.4085%" height="15" fill="rgb(230,116,27)" fg:x="10" fg:w="1"/><text x="14.3345%" y="735.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetForURL(__CFURL const*, void*) (1 samples, 1.41%)</title><rect x="14.0845%" y="709" width="1.4085%" height="15" fill="rgb(228,99,48)" fg:x="10" fg:w="1"/><text x="14.3345%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.41%)</title><rect x="14.0845%" y="693" width="1.4085%" height="15" fill="rgb(253,11,6)" fg:x="10" fg:w="1"/><text x="14.3345%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.41%)</title><rect x="14.0845%" y="677" width="1.4085%" height="15" fill="rgb(247,143,39)" fg:x="10" fg:w="1"/><text x="14.3345%" y="687.50"></text></g><g><title>CoreServicesInternal`invocation function for block in initGlobalsOnce() (1 samples, 1.41%)</title><rect x="14.0845%" y="661" width="1.4085%" height="15" fill="rgb(236,97,10)" fg:x="10" fg:w="1"/><text x="14.3345%" y="671.50"></text></g><g><title>CoreServicesInternal`FileURLGetDYLDEntryPointWithImage (1 samples, 1.41%)</title><rect x="14.0845%" y="645" width="1.4085%" height="15" fill="rgb(233,208,19)" fg:x="10" fg:w="1"/><text x="14.3345%" y="655.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 1.41%)</title><rect x="14.0845%" y="629" width="1.4085%" height="15" fill="rgb(216,164,2)" fg:x="10" fg:w="1"/><text x="14.3345%" y="639.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (1 samples, 1.41%)</title><rect x="14.0845%" y="613" width="1.4085%" height="15" fill="rgb(220,129,5)" fg:x="10" fg:w="1"/><text x="14.3345%" y="623.50"></text></g><g><title>dyld`dyld4::Loader::getLoader (1 samples, 1.41%)</title><rect x="14.0845%" y="597" width="1.4085%" height="15" fill="rgb(242,17,10)" fg:x="10" fg:w="1"/><text x="14.3345%" y="607.50"></text></g><g><title>dyld`dyld4::ProcessConfig::canonicalDylibPathInCache (1 samples, 1.41%)</title><rect x="14.0845%" y="581" width="1.4085%" height="15" fill="rgb(242,107,0)" fg:x="10" fg:w="1"/><text x="14.3345%" y="591.50"></text></g><g><title>dyld`dyld4::SyscallDelegate::realpath (1 samples, 1.41%)</title><rect x="14.0845%" y="565" width="1.4085%" height="15" fill="rgb(251,28,31)" fg:x="10" fg:w="1"/><text x="14.3345%" y="575.50"></text></g><g><title>dyld`dyld3::open (1 samples, 1.41%)</title><rect x="14.0845%" y="549" width="1.4085%" height="15" fill="rgb(233,223,10)" fg:x="10" fg:w="1"/><text x="14.3345%" y="559.50"></text></g><g><title>dyld`open_with_subsystem (1 samples, 1.41%)</title><rect x="14.0845%" y="533" width="1.4085%" height="15" fill="rgb(215,21,27)" fg:x="10" fg:w="1"/><text x="14.3345%" y="543.50"></text></g><g><title>dyld`__open (1 samples, 1.41%)</title><rect x="14.0845%" y="517" width="1.4085%" height="15" fill="rgb(232,23,21)" fg:x="10" fg:w="1"/><text x="14.3345%" y="527.50"></text></g><g><title>ti-smoked`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (10 samples, 14.08%)</title><rect x="2.8169%" y="837" width="14.0845%" height="15" fill="rgb(244,5,23)" fg:x="2" fg:w="10"/><text x="3.0669%" y="847.50">ti-smoked`&lt;tokio_nati..</text></g><g><title>ti-smoked`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (10 samples, 14.08%)</title><rect x="2.8169%" y="821" width="14.0845%" height="15" fill="rgb(226,81,46)" fg:x="2" fg:w="10"/><text x="3.0669%" y="831.50">ti-smoked`native_tls:..</text></g><g><title>ti-smoked`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (10 samples, 14.08%)</title><rect x="2.8169%" y="805" width="14.0845%" height="15" fill="rgb(247,70,30)" fg:x="2" fg:w="10"/><text x="3.0669%" y="815.50">ti-smoked`security_fr..</text></g><g><title>ti-smoked`security_framework::trust::SecTrust::evaluate_with_error (2 samples, 2.82%)</title><rect x="14.0845%" y="789" width="2.8169%" height="15" fill="rgb(212,68,19)" fg:x="10" fg:w="2"/><text x="14.3345%" y="799.50">ti..</text></g><g><title>Security`SecTrustEvaluateInternal (2 samples, 2.82%)</title><rect x="14.0845%" y="773" width="2.8169%" height="15" fill="rgb(240,187,13)" fg:x="10" fg:w="2"/><text x="14.3345%" y="783.50">Se..</text></g><g><title>Security`SecTrustEvaluateIfNecessary (2 samples, 2.82%)</title><rect x="14.0845%" y="757" width="2.8169%" height="15" fill="rgb(223,113,26)" fg:x="10" fg:w="2"/><text x="14.3345%" y="767.50">Se..</text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 1.41%)</title><rect x="15.4930%" y="741" width="1.4085%" height="15" fill="rgb(206,192,2)" fg:x="11" fg:w="1"/><text x="15.7430%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.41%)</title><rect x="15.4930%" y="725" width="1.4085%" height="15" fill="rgb(241,108,4)" fg:x="11" fg:w="1"/><text x="15.7430%" y="735.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke.521 (1 samples, 1.41%)</title><rect x="15.4930%" y="709" width="1.4085%" height="15" fill="rgb(247,173,49)" fg:x="11" fg:w="1"/><text x="15.7430%" y="719.50"></text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (1 samples, 1.41%)</title><rect x="15.4930%" y="693" width="1.4085%" height="15" fill="rgb(224,114,35)" fg:x="11" fg:w="1"/><text x="15.7430%" y="703.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (1 samples, 1.41%)</title><rect x="15.4930%" y="677" width="1.4085%" height="15" fill="rgb(245,159,27)" fg:x="11" fg:w="1"/><text x="15.7430%" y="687.50"></text></g><g><title>Security`SecOSStatusWith (1 samples, 1.41%)</title><rect x="15.4930%" y="661" width="1.4085%" height="15" fill="rgb(245,172,44)" fg:x="11" fg:w="1"/><text x="15.7430%" y="671.50"></text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (1 samples, 1.41%)</title><rect x="15.4930%" y="645" width="1.4085%" height="15" fill="rgb(236,23,11)" fg:x="11" fg:w="1"/><text x="15.7430%" y="655.50"></text></g><g><title>Security`securityd_send_sync_and_do (1 samples, 1.41%)</title><rect x="15.4930%" y="629" width="1.4085%" height="15" fill="rgb(205,117,38)" fg:x="11" fg:w="1"/><text x="15.7430%" y="639.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke_2 (1 samples, 1.41%)</title><rect x="15.4930%" y="613" width="1.4085%" height="15" fill="rgb(237,72,25)" fg:x="11" fg:w="1"/><text x="15.7430%" y="623.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryOptional (1 samples, 1.41%)</title><rect x="15.4930%" y="597" width="1.4085%" height="15" fill="rgb(244,70,9)" fg:x="11" fg:w="1"/><text x="15.7430%" y="607.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryAndPossiblyMutateMessage (1 samples, 1.41%)</title><rect x="15.4930%" y="581" width="1.4085%" height="15" fill="rgb(217,125,39)" fg:x="11" fg:w="1"/><text x="15.7430%" y="591.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (1 samples, 1.41%)</title><rect x="15.4930%" y="565" width="1.4085%" height="15" fill="rgb(235,36,10)" fg:x="11" fg:w="1"/><text x="15.7430%" y="575.50"></text></g><g><title>Security`der_decode_plist (1 samples, 1.41%)</title><rect x="15.4930%" y="549" width="1.4085%" height="15" fill="rgb(251,123,47)" fg:x="11" fg:w="1"/><text x="15.7430%" y="559.50"></text></g><g><title>Security`der_decode_dictionary (1 samples, 1.41%)</title><rect x="15.4930%" y="533" width="1.4085%" height="15" fill="rgb(221,13,13)" fg:x="11" fg:w="1"/><text x="15.7430%" y="543.50"></text></g><g><title>Security`der_decode_plist (1 samples, 1.41%)</title><rect x="15.4930%" y="517" width="1.4085%" height="15" fill="rgb(238,131,9)" fg:x="11" fg:w="1"/><text x="15.7430%" y="527.50"></text></g><g><title>Security`der_decode_date (1 samples, 1.41%)</title><rect x="15.4930%" y="501" width="1.4085%" height="15" fill="rgb(211,50,8)" fg:x="11" fg:w="1"/><text x="15.7430%" y="511.50"></text></g><g><title>Security`der_decode_commontime_body (1 samples, 1.41%)</title><rect x="15.4930%" y="485" width="1.4085%" height="15" fill="rgb(245,182,24)" fg:x="11" fg:w="1"/><text x="15.7430%" y="495.50"></text></g><g><title>Security`SecCFCalendarDoWithZuluCalendar (1 samples, 1.41%)</title><rect x="15.4930%" y="469" width="1.4085%" height="15" fill="rgb(242,14,37)" fg:x="11" fg:w="1"/><text x="15.7430%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 1.41%)</title><rect x="15.4930%" y="453" width="1.4085%" height="15" fill="rgb(246,228,12)" fg:x="11" fg:w="1"/><text x="15.7430%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.41%)</title><rect x="15.4930%" y="437" width="1.4085%" height="15" fill="rgb(213,55,15)" fg:x="11" fg:w="1"/><text x="15.7430%" y="447.50"></text></g><g><title>Security`__SecCFCalendarDoWithZuluCalendar_block_invoke (1 samples, 1.41%)</title><rect x="15.4930%" y="421" width="1.4085%" height="15" fill="rgb(209,9,3)" fg:x="11" fg:w="1"/><text x="15.7430%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.41%)</title><rect x="15.4930%" y="405" width="1.4085%" height="15" fill="rgb(230,59,30)" fg:x="11" fg:w="1"/><text x="15.7430%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.41%)</title><rect x="15.4930%" y="389" width="1.4085%" height="15" fill="rgb(209,121,21)" fg:x="11" fg:w="1"/><text x="15.7430%" y="399.50"></text></g><g><title>Security`__SecCFCalendarGetZulu_block_invoke (1 samples, 1.41%)</title><rect x="15.4930%" y="373" width="1.4085%" height="15" fill="rgb(220,109,13)" fg:x="11" fg:w="1"/><text x="15.7430%" y="383.50"></text></g><g><title>CoreFoundation`_CFCalendarCreate (1 samples, 1.41%)</title><rect x="15.4930%" y="357" width="1.4085%" height="15" fill="rgb(232,18,1)" fg:x="11" fg:w="1"/><text x="15.7430%" y="367.50"></text></g><g><title>CoreFoundation`_CFCalendarInitialize (1 samples, 1.41%)</title><rect x="15.4930%" y="341" width="1.4085%" height="15" fill="rgb(215,41,42)" fg:x="11" fg:w="1"/><text x="15.7430%" y="351.50"></text></g><g><title>CoreFoundation`CFTimeZoneCopyDefault (1 samples, 1.41%)</title><rect x="15.4930%" y="325" width="1.4085%" height="15" fill="rgb(224,123,36)" fg:x="11" fg:w="1"/><text x="15.7430%" y="335.50"></text></g><g><title>CoreFoundation`+[NSTimeZone defaultTimeZone] (1 samples, 1.41%)</title><rect x="15.4930%" y="309" width="1.4085%" height="15" fill="rgb(240,125,3)" fg:x="11" fg:w="1"/><text x="15.7430%" y="319.50"></text></g><g><title>CoreFoundation`+[NSTimeZone systemTimeZone] (1 samples, 1.41%)</title><rect x="15.4930%" y="293" width="1.4085%" height="15" fill="rgb(205,98,50)" fg:x="11" fg:w="1"/><text x="15.7430%" y="303.50"></text></g><g><title>CoreFoundation`+[NSTimeZone timeZoneWithName:] (1 samples, 1.41%)</title><rect x="15.4930%" y="277" width="1.4085%" height="15" fill="rgb(205,185,37)" fg:x="11" fg:w="1"/><text x="15.7430%" y="287.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderTimeZone __initWithName:cache:] (1 samples, 1.41%)</title><rect x="15.4930%" y="261" width="1.4085%" height="15" fill="rgb(238,207,15)" fg:x="11" fg:w="1"/><text x="15.7430%" y="271.50"></text></g><g><title>CoreFoundation`__nameStringOK (1 samples, 1.41%)</title><rect x="15.4930%" y="245" width="1.4085%" height="15" fill="rgb(213,199,42)" fg:x="11" fg:w="1"/><text x="15.7430%" y="255.50"></text></g><g><title>libicucore.A.dylib`ucal_getCanonicalTimeZoneID (1 samples, 1.41%)</title><rect x="15.4930%" y="229" width="1.4085%" height="15" fill="rgb(235,201,11)" fg:x="11" fg:w="1"/><text x="15.7430%" y="239.50"></text></g><g><title>libicucore.A.dylib`icu::TimeZone::getCanonicalID (1 samples, 1.41%)</title><rect x="15.4930%" y="213" width="1.4085%" height="15" fill="rgb(207,46,11)" fg:x="11" fg:w="1"/><text x="15.7430%" y="223.50"></text></g><g><title>libicucore.A.dylib`icu::ZoneMeta::getCanonicalCLDRID (1 samples, 1.41%)</title><rect x="15.4930%" y="197" width="1.4085%" height="15" fill="rgb(241,35,35)" fg:x="11" fg:w="1"/><text x="15.7430%" y="207.50"></text></g><g><title>libicucore.A.dylib`icu::ZoneMeta::getCanonicalCLDRID (1 samples, 1.41%)</title><rect x="15.4930%" y="181" width="1.4085%" height="15" fill="rgb(243,32,47)" fg:x="11" fg:w="1"/><text x="15.7430%" y="191.50"></text></g><g><title>libicucore.A.dylib`ures_getByKey (1 samples, 1.41%)</title><rect x="15.4930%" y="165" width="1.4085%" height="15" fill="rgb(247,202,23)" fg:x="11" fg:w="1"/><text x="15.7430%" y="175.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea51660 (1 samples, 1.41%)</title><rect x="15.4930%" y="149" width="1.4085%" height="15" fill="rgb(219,102,11)" fg:x="11" fg:w="1"/><text x="15.7430%" y="159.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea4f378 (1 samples, 1.41%)</title><rect x="15.4930%" y="133" width="1.4085%" height="15" fill="rgb(243,110,44)" fg:x="11" fg:w="1"/><text x="15.7430%" y="143.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea520e4 (1 samples, 1.41%)</title><rect x="15.4930%" y="117" width="1.4085%" height="15" fill="rgb(222,74,54)" fg:x="11" fg:w="1"/><text x="15.7430%" y="127.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea52c2c (1 samples, 1.41%)</title><rect x="15.4930%" y="101" width="1.4085%" height="15" fill="rgb(216,99,12)" fg:x="11" fg:w="1"/><text x="15.7430%" y="111.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea23e3c (1 samples, 1.41%)</title><rect x="15.4930%" y="85" width="1.4085%" height="15" fill="rgb(226,22,26)" fg:x="11" fg:w="1"/><text x="15.7430%" y="95.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea2494c (1 samples, 1.41%)</title><rect x="15.4930%" y="69" width="1.4085%" height="15" fill="rgb(217,163,10)" fg:x="11" fg:w="1"/><text x="15.7430%" y="79.50"></text></g><g><title>libicucore.A.dylib`0x000000018ea24cf0 (1 samples, 1.41%)</title><rect x="15.4930%" y="53" width="1.4085%" height="15" fill="rgb(213,25,53)" fg:x="11" fg:w="1"/><text x="15.7430%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 1.41%)</title><rect x="15.4930%" y="37" width="1.4085%" height="15" fill="rgb(252,105,26)" fg:x="11" fg:w="1"/><text x="15.7430%" y="47.50"></text></g><g><title>ti-smoked`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (11 samples, 15.49%)</title><rect x="2.8169%" y="949" width="15.4930%" height="15" fill="rgb(220,39,43)" fg:x="2" fg:w="11"/><text x="3.0669%" y="959.50">ti-smoked`&lt;futures_util:..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11 samples, 15.49%)</title><rect x="2.8169%" y="933" width="15.4930%" height="15" fill="rgb(229,68,48)" fg:x="2" fg:w="11"/><text x="3.0669%" y="943.50">ti-smoked`&lt;futures_util:..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11 samples, 15.49%)</title><rect x="2.8169%" y="917" width="15.4930%" height="15" fill="rgb(252,8,32)" fg:x="2" fg:w="11"/><text x="3.0669%" y="927.50">ti-smoked`&lt;futures_util:..</text></g><g><title>ti-smoked`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (11 samples, 15.49%)</title><rect x="2.8169%" y="901" width="15.4930%" height="15" fill="rgb(223,20,43)" fg:x="2" fg:w="11"/><text x="3.0669%" y="911.50">ti-smoked`&lt;hyper::servic..</text></g><g><title>ti-smoked`reqwest::connect::with_timeout::_{{closure}} (11 samples, 15.49%)</title><rect x="2.8169%" y="885" width="15.4930%" height="15" fill="rgb(229,81,49)" fg:x="2" fg:w="11"/><text x="3.0669%" y="895.50">ti-smoked`reqwest::conne..</text></g><g><title>ti-smoked`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (11 samples, 15.49%)</title><rect x="2.8169%" y="869" width="15.4930%" height="15" fill="rgb(236,28,36)" fg:x="2" fg:w="11"/><text x="3.0669%" y="879.50">ti-smoked`reqwest::conne..</text></g><g><title>ti-smoked`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (11 samples, 15.49%)</title><rect x="2.8169%" y="853" width="15.4930%" height="15" fill="rgb(249,185,26)" fg:x="2" fg:w="11"/><text x="3.0669%" y="863.50">ti-smoked`&lt;hyper_tls::cl..</text></g><g><title>ti-smoked`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 1.41%)</title><rect x="16.9014%" y="837" width="1.4085%" height="15" fill="rgb(249,174,33)" fg:x="12" fg:w="1"/><text x="17.1514%" y="847.50"></text></g><g><title>ti-smoked`native_tls::imp::TlsConnector::connect (1 samples, 1.41%)</title><rect x="16.9014%" y="821" width="1.4085%" height="15" fill="rgb(233,201,37)" fg:x="12" fg:w="1"/><text x="17.1514%" y="831.50"></text></g><g><title>ti-smoked`security_framework::secure_transport::ClientBuilder::handshake (1 samples, 1.41%)</title><rect x="16.9014%" y="805" width="1.4085%" height="15" fill="rgb(221,78,26)" fg:x="12" fg:w="1"/><text x="17.1514%" y="815.50"></text></g><g><title>Security`SSLCreateContext (1 samples, 1.41%)</title><rect x="16.9014%" y="789" width="1.4085%" height="15" fill="rgb(250,127,30)" fg:x="12" fg:w="1"/><text x="17.1514%" y="799.50"></text></g><g><title>Security`SSLCreateContextWithRecordFuncs (1 samples, 1.41%)</title><rect x="16.9014%" y="773" width="1.4085%" height="15" fill="rgb(230,49,44)" fg:x="12" fg:w="1"/><text x="17.1514%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.41%)</title><rect x="16.9014%" y="757" width="1.4085%" height="15" fill="rgb(229,67,23)" fg:x="12" fg:w="1"/><text x="17.1514%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.41%)</title><rect x="16.9014%" y="741" width="1.4085%" height="15" fill="rgb(249,83,47)" fg:x="12" fg:w="1"/><text x="17.1514%" y="751.50"></text></g><g><title>Security`__SSLCreateContextWithRecordFuncs_block_invoke (1 samples, 1.41%)</title><rect x="16.9014%" y="725" width="1.4085%" height="15" fill="rgb(215,43,3)" fg:x="12" fg:w="1"/><text x="17.1514%" y="735.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 1.41%)</title><rect x="16.9014%" y="709" width="1.4085%" height="15" fill="rgb(238,154,13)" fg:x="12" fg:w="1"/><text x="17.1514%" y="719.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 1.41%)</title><rect x="16.9014%" y="693" width="1.4085%" height="15" fill="rgb(219,56,2)" fg:x="12" fg:w="1"/><text x="17.1514%" y="703.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 1.41%)</title><rect x="16.9014%" y="677" width="1.4085%" height="15" fill="rgb(233,0,4)" fg:x="12" fg:w="1"/><text x="17.1514%" y="687.50"></text></g><g><title>CoreFoundation`__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 1.41%)</title><rect x="16.9014%" y="661" width="1.4085%" height="15" fill="rgb(235,30,7)" fg:x="12" fg:w="1"/><text x="17.1514%" y="671.50"></text></g><g><title>CoreFoundation`__76-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:]_block_invoke (1 samples, 1.41%)</title><rect x="16.9014%" y="645" width="1.4085%" height="15" fill="rgb(250,79,13)" fg:x="12" fg:w="1"/><text x="17.1514%" y="655.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource copyValueForKey:] (1 samples, 1.41%)</title><rect x="16.9014%" y="629" width="1.4085%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="1"/><text x="17.1514%" y="639.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_copyValueForKey:] (1 samples, 1.41%)</title><rect x="16.9014%" y="613" width="1.4085%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="1"/><text x="17.1514%" y="623.50"></text></g><g><title>CoreFoundation`-[CFPrefsSearchListSource alreadylocked_getDictionary:] (1 samples, 1.41%)</title><rect x="16.9014%" y="597" width="1.4085%" height="15" fill="rgb(235,168,5)" fg:x="12" fg:w="1"/><text x="17.1514%" y="607.50"></text></g><g><title>CoreFoundation`-[CFPrefsSource mergeIntoDictionary:sourceDictionary:cloudKeyEvaluator:] (1 samples, 1.41%)</title><rect x="16.9014%" y="581" width="1.4085%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="1"/><text x="17.1514%" y="591.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (1 samples, 1.41%)</title><rect x="16.9014%" y="565" width="1.4085%" height="15" fill="rgb(215,215,53)" fg:x="12" fg:w="1"/><text x="17.1514%" y="575.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (1 samples, 1.41%)</title><rect x="16.9014%" y="549" width="1.4085%" height="15" fill="rgb(223,4,10)" fg:x="12" fg:w="1"/><text x="17.1514%" y="559.50"></text></g><g><title>libobjc.A.dylib`cache_t::insert(objc_selector*, void (*) (1 samples, 1.41%)</title><rect x="16.9014%" y="533" width="1.4085%" height="15" fill="rgb(234,103,6)" fg:x="12" fg:w="1"/><text x="17.1514%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 1.41%)</title><rect x="16.9014%" y="517" width="1.4085%" height="15" fill="rgb(227,97,0)" fg:x="12" fg:w="1"/><text x="17.1514%" y="527.50"></text></g><g><title>ti-smoked`azure_core::http_client::reqwest::_&lt;impl azure_core::http_client::HttpClient for reqwest::async_impl::client::Client&gt;::execute_request::_{{closure}} (12 samples, 16.90%)</title><rect x="2.8169%" y="1013" width="16.9014%" height="15" fill="rgb(234,150,53)" fg:x="2" fg:w="12"/><text x="3.0669%" y="1023.50">ti-smoked`azure_core::http..</text></g><g><title>ti-smoked`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (12 samples, 16.90%)</title><rect x="2.8169%" y="997" width="16.9014%" height="15" fill="rgb(228,201,54)" fg:x="2" fg:w="12"/><text x="3.0669%" y="1007.50">ti-smoked`&lt;reqwest::async_..</text></g><g><title>ti-smoked`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (12 samples, 16.90%)</title><rect x="2.8169%" y="981" width="16.9014%" height="15" fill="rgb(222,22,37)" fg:x="2" fg:w="12"/><text x="3.0669%" y="991.50">ti-smoked`hyper::client::c..</text></g><g><title>ti-smoked`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (12 samples, 16.90%)</title><rect x="2.8169%" y="965" width="16.9014%" height="15" fill="rgb(237,53,32)" fg:x="2" fg:w="12"/><text x="3.0669%" y="975.50">ti-smoked`&lt;futures_util::f..</text></g><g><title>ti-smoked`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (1 samples, 1.41%)</title><rect x="18.3099%" y="949" width="1.4085%" height="15" fill="rgb(233,25,53)" fg:x="13" fg:w="1"/><text x="18.5599%" y="959.50"></text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::ClientFactory as ti_smoked::commonlib::Configure&gt;::build::_{{closure}} (13 samples, 18.31%)</title><rect x="2.8169%" y="1045" width="18.3099%" height="15" fill="rgb(210,40,34)" fg:x="2" fg:w="13"/><text x="3.0669%" y="1055.50">ti-smoked`&lt;ti_smoked::commonl..</text></g><g><title>ti-smoked`&lt;azure_identity::token_credentials::client_secret_credentials::ClientSecretCredential as azure_core::auth::TokenCredential&gt;::get_token::_{{closure}} (13 samples, 18.31%)</title><rect x="2.8169%" y="1029" width="18.3099%" height="15" fill="rgb(241,220,44)" fg:x="2" fg:w="13"/><text x="3.0669%" y="1039.50">ti-smoked`&lt;azure_identity::to..</text></g><g><title>ti-smoked`url::ParseOptions::parse (1 samples, 1.41%)</title><rect x="19.7183%" y="1013" width="1.4085%" height="15" fill="rgb(235,28,35)" fg:x="14" fg:w="1"/><text x="19.9683%" y="1023.50"></text></g><g><title>ti-smoked`url::parser::Parser::parse_url (1 samples, 1.41%)</title><rect x="19.7183%" y="997" width="1.4085%" height="15" fill="rgb(210,56,17)" fg:x="14" fg:w="1"/><text x="19.9683%" y="1007.50"></text></g><g><title>ti-smoked`url::parser::Parser::after_double_slash (1 samples, 1.41%)</title><rect x="19.7183%" y="981" width="1.4085%" height="15" fill="rgb(224,130,29)" fg:x="14" fg:w="1"/><text x="19.9683%" y="991.50"></text></g><g><title>ti-smoked`url::parser::Parser::parse_host (1 samples, 1.41%)</title><rect x="19.7183%" y="965" width="1.4085%" height="15" fill="rgb(235,212,8)" fg:x="14" fg:w="1"/><text x="19.9683%" y="975.50"></text></g><g><title>ti-smoked`url::host::Host::parse (1 samples, 1.41%)</title><rect x="19.7183%" y="949" width="1.4085%" height="15" fill="rgb(223,33,50)" fg:x="14" fg:w="1"/><text x="19.9683%" y="959.50"></text></g><g><title>ti-smoked`idna::uts46::Config::to_ascii (1 samples, 1.41%)</title><rect x="19.7183%" y="933" width="1.4085%" height="15" fill="rgb(219,149,13)" fg:x="14" fg:w="1"/><text x="19.9683%" y="943.50"></text></g><g><title>ti-smoked`idna::uts46::Idna::to_ascii (1 samples, 1.41%)</title><rect x="19.7183%" y="917" width="1.4085%" height="15" fill="rgb(250,156,29)" fg:x="14" fg:w="1"/><text x="19.9683%" y="927.50"></text></g><g><title>ti-smoked`idna::uts46::processing (1 samples, 1.41%)</title><rect x="19.7183%" y="901" width="1.4085%" height="15" fill="rgb(216,193,19)" fg:x="14" fg:w="1"/><text x="19.9683%" y="911.50"></text></g><g><title>ti-smoked`std::io::stdio::_print (1 samples, 1.41%)</title><rect x="21.1268%" y="1045" width="1.4085%" height="15" fill="rgb(216,135,14)" fg:x="15" fg:w="1"/><text x="21.3768%" y="1055.50"></text></g><g><title>ti-smoked`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 1.41%)</title><rect x="21.1268%" y="1029" width="1.4085%" height="15" fill="rgb(241,47,5)" fg:x="15" fg:w="1"/><text x="21.3768%" y="1039.50"></text></g><g><title>ti-smoked`core::fmt::write (1 samples, 1.41%)</title><rect x="21.1268%" y="1013" width="1.4085%" height="15" fill="rgb(233,42,35)" fg:x="15" fg:w="1"/><text x="21.3768%" y="1023.50"></text></g><g><title>ti-smoked`&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 1.41%)</title><rect x="22.5352%" y="965" width="1.4085%" height="15" fill="rgb(231,13,6)" fg:x="16" fg:w="1"/><text x="22.7852%" y="975.50"></text></g><g><title>ti-smoked`hyper::common::exec::Exec::execute (1 samples, 1.41%)</title><rect x="22.5352%" y="949" width="1.4085%" height="15" fill="rgb(207,181,40)" fg:x="16" fg:w="1"/><text x="22.7852%" y="959.50"></text></g><g><title>ti-smoked`tokio::task::spawn::spawn (1 samples, 1.41%)</title><rect x="22.5352%" y="933" width="1.4085%" height="15" fill="rgb(254,173,49)" fg:x="16" fg:w="1"/><text x="22.7852%" y="943.50"></text></g><g><title>ti-smoked`tokio::runtime::scheduler::Handle::spawn (1 samples, 1.41%)</title><rect x="22.5352%" y="917" width="1.4085%" height="15" fill="rgb(221,1,38)" fg:x="16" fg:w="1"/><text x="22.7852%" y="927.50"></text></g><g><title>ti-smoked`tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 1.41%)</title><rect x="22.5352%" y="901" width="1.4085%" height="15" fill="rgb(206,124,46)" fg:x="16" fg:w="1"/><text x="22.7852%" y="911.50"></text></g><g><title>ti-smoked`tokio::runtime::task::core::Header::get_trailer (1 samples, 1.41%)</title><rect x="22.5352%" y="885" width="1.4085%" height="15" fill="rgb(249,21,11)" fg:x="16" fg:w="1"/><text x="22.7852%" y="895.50"></text></g><g><title>ti-smoked`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 1.41%)</title><rect x="23.9437%" y="869" width="1.4085%" height="15" fill="rgb(222,201,40)" fg:x="17" fg:w="1"/><text x="24.1937%" y="879.50"></text></g><g><title>ti-smoked`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (1 samples, 1.41%)</title><rect x="23.9437%" y="853" width="1.4085%" height="15" fill="rgb(235,61,29)" fg:x="17" fg:w="1"/><text x="24.1937%" y="863.50"></text></g><g><title>ti-smoked`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1 samples, 1.41%)</title><rect x="23.9437%" y="837" width="1.4085%" height="15" fill="rgb(219,207,3)" fg:x="17" fg:w="1"/><text x="24.1937%" y="847.50"></text></g><g><title>Security`SSLHandshake (1 samples, 1.41%)</title><rect x="23.9437%" y="821" width="1.4085%" height="15" fill="rgb(222,56,46)" fg:x="17" fg:w="1"/><text x="24.1937%" y="831.50"></text></g><g><title>Security`SSLHandshakeProceed (1 samples, 1.41%)</title><rect x="23.9437%" y="805" width="1.4085%" height="15" fill="rgb(239,76,54)" fg:x="17" fg:w="1"/><text x="24.1937%" y="815.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (1 samples, 1.41%)</title><rect x="23.9437%" y="789" width="1.4085%" height="15" fill="rgb(231,124,27)" fg:x="17" fg:w="1"/><text x="24.1937%" y="799.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (1 samples, 1.41%)</title><rect x="23.9437%" y="773" width="1.4085%" height="15" fill="rgb(249,195,6)" fg:x="17" fg:w="1"/><text x="24.1937%" y="783.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (1 samples, 1.41%)</title><rect x="23.9437%" y="757" width="1.4085%" height="15" fill="rgb(237,174,47)" fg:x="17" fg:w="1"/><text x="24.1937%" y="767.50"></text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (1 samples, 1.41%)</title><rect x="23.9437%" y="741" width="1.4085%" height="15" fill="rgb(206,201,31)" fg:x="17" fg:w="1"/><text x="24.1937%" y="751.50"></text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (1 samples, 1.41%)</title><rect x="23.9437%" y="725" width="1.4085%" height="15" fill="rgb(231,57,52)" fg:x="17" fg:w="1"/><text x="24.1937%" y="735.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key (1 samples, 1.41%)</title><rect x="23.9437%" y="709" width="1.4085%" height="15" fill="rgb(248,177,22)" fg:x="17" fg:w="1"/><text x="24.1937%" y="719.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (1 samples, 1.41%)</title><rect x="23.9437%" y="693" width="1.4085%" height="15" fill="rgb(215,211,37)" fg:x="17" fg:w="1"/><text x="24.1937%" y="703.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (1 samples, 1.41%)</title><rect x="23.9437%" y="677" width="1.4085%" height="15" fill="rgb(241,128,51)" fg:x="17" fg:w="1"/><text x="24.1937%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_internal_fips_ws (1 samples, 1.41%)</title><rect x="23.9437%" y="661" width="1.4085%" height="15" fill="rgb(227,165,31)" fg:x="17" fg:w="1"/><text x="24.1937%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccec_make_pub_from_priv_ws (1 samples, 1.41%)</title><rect x="23.9437%" y="645" width="1.4085%" height="15" fill="rgb(228,167,24)" fg:x="17" fg:w="1"/><text x="24.1937%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_is_point_projective_ws (1 samples, 1.41%)</title><rect x="23.9437%" y="629" width="1.4085%" height="15" fill="rgb(228,143,12)" fg:x="17" fg:w="1"/><text x="24.1937%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccn_mux (1 samples, 1.41%)</title><rect x="23.9437%" y="613" width="1.4085%" height="15" fill="rgb(249,149,8)" fg:x="17" fg:w="1"/><text x="24.1937%" y="623.50"></text></g><g><title>ti-smoked`ti_smoked::smoke::alive::_&lt;impl ti_smoked::smoke::SmokeTest for ti_smoked::smoke::AliveTest&gt;::run::_{{closure}} (3 samples, 4.23%)</title><rect x="22.5352%" y="1045" width="4.2254%" height="15" fill="rgb(243,35,44)" fg:x="16" fg:w="3"/><text x="22.7852%" y="1055.50">ti-sm..</text></g><g><title>ti-smoked`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="22.5352%" y="1029" width="4.2254%" height="15" fill="rgb(246,89,9)" fg:x="16" fg:w="3"/><text x="22.7852%" y="1039.50">ti-sm..</text></g><g><title>ti-smoked`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (3 samples, 4.23%)</title><rect x="22.5352%" y="1013" width="4.2254%" height="15" fill="rgb(233,213,13)" fg:x="16" fg:w="3"/><text x="22.7852%" y="1023.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="22.5352%" y="997" width="4.2254%" height="15" fill="rgb(233,141,41)" fg:x="16" fg:w="3"/><text x="22.7852%" y="1007.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="22.5352%" y="981" width="4.2254%" height="15" fill="rgb(239,167,4)" fg:x="16" fg:w="3"/><text x="22.7852%" y="991.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 2.82%)</title><rect x="23.9437%" y="965" width="2.8169%" height="15" fill="rgb(209,217,16)" fg:x="17" fg:w="2"/><text x="24.1937%" y="975.50">ti..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 2.82%)</title><rect x="23.9437%" y="949" width="2.8169%" height="15" fill="rgb(219,88,35)" fg:x="17" fg:w="2"/><text x="24.1937%" y="959.50">ti..</text></g><g><title>ti-smoked`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (2 samples, 2.82%)</title><rect x="23.9437%" y="933" width="2.8169%" height="15" fill="rgb(220,193,23)" fg:x="17" fg:w="2"/><text x="24.1937%" y="943.50">ti..</text></g><g><title>ti-smoked`reqwest::connect::with_timeout::_{{closure}} (2 samples, 2.82%)</title><rect x="23.9437%" y="917" width="2.8169%" height="15" fill="rgb(230,90,52)" fg:x="17" fg:w="2"/><text x="24.1937%" y="927.50">ti..</text></g><g><title>ti-smoked`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (2 samples, 2.82%)</title><rect x="23.9437%" y="901" width="2.8169%" height="15" fill="rgb(252,106,19)" fg:x="17" fg:w="2"/><text x="24.1937%" y="911.50">ti..</text></g><g><title>ti-smoked`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (2 samples, 2.82%)</title><rect x="23.9437%" y="885" width="2.8169%" height="15" fill="rgb(206,74,20)" fg:x="17" fg:w="2"/><text x="24.1937%" y="895.50">ti..</text></g><g><title>ti-smoked`&lt;tokio_native_tls::StartedHandshakeFuture&lt;F,S&gt; as core::future::future::Future&gt;::poll (1 samples, 1.41%)</title><rect x="25.3521%" y="869" width="1.4085%" height="15" fill="rgb(230,138,44)" fg:x="18" fg:w="1"/><text x="25.6021%" y="879.50"></text></g><g><title>ti-smoked`native_tls::imp::TlsConnector::connect (1 samples, 1.41%)</title><rect x="25.3521%" y="853" width="1.4085%" height="15" fill="rgb(235,182,43)" fg:x="18" fg:w="1"/><text x="25.6021%" y="863.50"></text></g><g><title>ti-smoked`security_framework::secure_transport::ClientBuilder::handshake (1 samples, 1.41%)</title><rect x="25.3521%" y="837" width="1.4085%" height="15" fill="rgb(242,16,51)" fg:x="18" fg:w="1"/><text x="25.6021%" y="847.50"></text></g><g><title>ti-smoked`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (1 samples, 1.41%)</title><rect x="25.3521%" y="821" width="1.4085%" height="15" fill="rgb(248,9,4)" fg:x="18" fg:w="1"/><text x="25.6021%" y="831.50"></text></g><g><title>Security`SSLHandshake (1 samples, 1.41%)</title><rect x="25.3521%" y="805" width="1.4085%" height="15" fill="rgb(210,31,22)" fg:x="18" fg:w="1"/><text x="25.6021%" y="815.50"></text></g><g><title>Security`SSLHandshakeStart (1 samples, 1.41%)</title><rect x="25.3521%" y="789" width="1.4085%" height="15" fill="rgb(239,54,39)" fg:x="18" fg:w="1"/><text x="25.6021%" y="799.50"></text></g><g><title>libcommonCrypto.dylib`CCDigestGetDigestInfo (1 samples, 1.41%)</title><rect x="25.3521%" y="773" width="1.4085%" height="15" fill="rgb(230,99,41)" fg:x="18" fg:w="1"/><text x="25.6021%" y="783.50"></text></g><g><title>ti-smoked`ti_smoked::smoke::codes::_&lt;impl ti_smoked::smoke::SmokeTest for ti_smoked::smoke::CodesTest&gt;::run::_{{closure}} (1 samples, 1.41%)</title><rect x="26.7606%" y="1045" width="1.4085%" height="15" fill="rgb(253,106,12)" fg:x="19" fg:w="1"/><text x="27.0106%" y="1055.50"></text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibraryApi&gt;::get_code::_{{closure}} (1 samples, 1.41%)</title><rect x="26.7606%" y="1029" width="1.4085%" height="15" fill="rgb(213,46,41)" fg:x="19" fg:w="1"/><text x="27.0106%" y="1039.50"></text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibClient&gt;::get_request::_{{closure}} (1 samples, 1.41%)</title><rect x="26.7606%" y="1013" width="1.4085%" height="15" fill="rgb(215,133,35)" fg:x="19" fg:w="1"/><text x="27.0106%" y="1023.50"></text></g><g><title>ti-smoked`serde_json::de::from_str (1 samples, 1.41%)</title><rect x="26.7606%" y="997" width="1.4085%" height="15" fill="rgb(213,28,5)" fg:x="19" fg:w="1"/><text x="27.0106%" y="1007.50"></text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 1.41%)</title><rect x="26.7606%" y="981" width="1.4085%" height="15" fill="rgb(215,77,49)" fg:x="19" fg:w="1"/><text x="27.0106%" y="991.50"></text></g><g><title>ti-smoked`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 1.41%)</title><rect x="26.7606%" y="965" width="1.4085%" height="15" fill="rgb(248,100,22)" fg:x="19" fg:w="1"/><text x="27.0106%" y="975.50"></text></g><g><title>ti-smoked`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 1.41%)</title><rect x="26.7606%" y="949" width="1.4085%" height="15" fill="rgb(208,67,9)" fg:x="19" fg:w="1"/><text x="27.0106%" y="959.50"></text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 1.41%)</title><rect x="26.7606%" y="933" width="1.4085%" height="15" fill="rgb(219,133,21)" fg:x="19" fg:w="1"/><text x="27.0106%" y="943.50"></text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 1.41%)</title><rect x="26.7606%" y="917" width="1.4085%" height="15" fill="rgb(246,46,29)" fg:x="19" fg:w="1"/><text x="27.0106%" y="927.50"></text></g><g><title>ti-smoked`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 1.41%)</title><rect x="26.7606%" y="901" width="1.4085%" height="15" fill="rgb(246,185,52)" fg:x="19" fg:w="1"/><text x="27.0106%" y="911.50"></text></g><g><title>ti-smoked`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 1.41%)</title><rect x="26.7606%" y="885" width="1.4085%" height="15" fill="rgb(252,136,11)" fg:x="19" fg:w="1"/><text x="27.0106%" y="895.50"></text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 1.41%)</title><rect x="26.7606%" y="869" width="1.4085%" height="15" fill="rgb(219,138,53)" fg:x="19" fg:w="1"/><text x="27.0106%" y="879.50"></text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibClient&gt;::do_request::_{{closure}} (1 samples, 1.41%)</title><rect x="28.1690%" y="997" width="1.4085%" height="15" fill="rgb(211,51,23)" fg:x="20" fg:w="1"/><text x="28.4190%" y="1007.50"></text></g><g><title>ti-smoked`reqwest::async_impl::response::Response::text::_{{closure}} (1 samples, 1.41%)</title><rect x="28.1690%" y="981" width="1.4085%" height="15" fill="rgb(247,221,28)" fg:x="20" fg:w="1"/><text x="28.4190%" y="991.50"></text></g><g><title>ti-smoked`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (1 samples, 1.41%)</title><rect x="28.1690%" y="965" width="1.4085%" height="15" fill="rgb(251,222,45)" fg:x="20" fg:w="1"/><text x="28.4190%" y="975.50"></text></g><g><title>ti-smoked`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (1 samples, 1.41%)</title><rect x="28.1690%" y="949" width="1.4085%" height="15" fill="rgb(217,162,53)" fg:x="20" fg:w="1"/><text x="28.4190%" y="959.50"></text></g><g><title>ti-smoked`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 1.41%)</title><rect x="28.1690%" y="933" width="1.4085%" height="15" fill="rgb(229,93,14)" fg:x="20" fg:w="1"/><text x="28.4190%" y="943.50"></text></g><g><title>ti-smoked`hyper::body::body::Body::poll_inner (1 samples, 1.41%)</title><rect x="28.1690%" y="917" width="1.4085%" height="15" fill="rgb(209,67,49)" fg:x="20" fg:w="1"/><text x="28.4190%" y="927.50"></text></g><g><title>ti-smoked`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 1.41%)</title><rect x="28.1690%" y="901" width="1.4085%" height="15" fill="rgb(213,87,29)" fg:x="20" fg:w="1"/><text x="28.4190%" y="911.50"></text></g><g><title>ti-smoked`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 1.41%)</title><rect x="28.1690%" y="885" width="1.4085%" height="15" fill="rgb(205,151,52)" fg:x="20" fg:w="1"/><text x="28.4190%" y="895.50"></text></g><g><title>ti-smoked`tokio::runtime::task::waker::wake_by_val (1 samples, 1.41%)</title><rect x="28.1690%" y="869" width="1.4085%" height="15" fill="rgb(253,215,39)" fg:x="20" fg:w="1"/><text x="28.4190%" y="879.50"></text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 1.41%)</title><rect x="28.1690%" y="853" width="1.4085%" height="15" fill="rgb(221,220,41)" fg:x="20" fg:w="1"/><text x="28.4190%" y="863.50"></text></g><g><title>ti-smoked`tokio::runtime::driver::Handle::unpark (1 samples, 1.41%)</title><rect x="28.1690%" y="837" width="1.4085%" height="15" fill="rgb(218,133,21)" fg:x="20" fg:w="1"/><text x="28.4190%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 1.41%)</title><rect x="28.1690%" y="821" width="1.4085%" height="15" fill="rgb(221,193,43)" fg:x="20" fg:w="1"/><text x="28.4190%" y="831.50"></text></g><g><title>ti-smoked`ti_smoked::smoke::libraries::_&lt;impl ti_smoked::smoke::SmokeTest for ti_smoked::smoke::LibrariesTest&gt;::run::_{{closure}} (2 samples, 2.82%)</title><rect x="28.1690%" y="1045" width="2.8169%" height="15" fill="rgb(240,128,52)" fg:x="20" fg:w="2"/><text x="28.4190%" y="1055.50">ti..</text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibraryApi&gt;::get_library::_{{closure}} (2 samples, 2.82%)</title><rect x="28.1690%" y="1029" width="2.8169%" height="15" fill="rgb(253,114,12)" fg:x="20" fg:w="2"/><text x="28.4190%" y="1039.50">ti..</text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibClient&gt;::get_request::_{{closure}} (2 samples, 2.82%)</title><rect x="28.1690%" y="1013" width="2.8169%" height="15" fill="rgb(215,223,47)" fg:x="20" fg:w="2"/><text x="28.4190%" y="1023.50">ti..</text></g><g><title>ti-smoked`serde_json::de::from_str (1 samples, 1.41%)</title><rect x="29.5775%" y="997" width="1.4085%" height="15" fill="rgb(248,225,23)" fg:x="21" fg:w="1"/><text x="29.8275%" y="1007.50"></text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 1.41%)</title><rect x="29.5775%" y="981" width="1.4085%" height="15" fill="rgb(250,108,0)" fg:x="21" fg:w="1"/><text x="29.8275%" y="991.50"></text></g><g><title>ti-smoked`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 1.41%)</title><rect x="29.5775%" y="965" width="1.4085%" height="15" fill="rgb(228,208,7)" fg:x="21" fg:w="1"/><text x="29.8275%" y="975.50"></text></g><g><title>ti-smoked`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 1.41%)</title><rect x="29.5775%" y="949" width="1.4085%" height="15" fill="rgb(244,45,10)" fg:x="21" fg:w="1"/><text x="29.8275%" y="959.50"></text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 1.41%)</title><rect x="29.5775%" y="933" width="1.4085%" height="15" fill="rgb(207,125,25)" fg:x="21" fg:w="1"/><text x="29.8275%" y="943.50"></text></g><g><title>ti-smoked`ti_smoked::smoke::mapped_codes::_&lt;impl ti_smoked::smoke::SmokeTest for ti_smoked::smoke::MappedCodeTest&gt;::run::_{{closure}} (2 samples, 2.82%)</title><rect x="30.9859%" y="1045" width="2.8169%" height="15" fill="rgb(210,195,18)" fg:x="22" fg:w="2"/><text x="31.2359%" y="1055.50">ti..</text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibraryApi&gt;::get_code_mapped::_{{closure}} (2 samples, 2.82%)</title><rect x="30.9859%" y="1029" width="2.8169%" height="15" fill="rgb(249,80,12)" fg:x="22" fg:w="2"/><text x="31.2359%" y="1039.50">ti..</text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibClient&gt;::get_request::_{{closure}} (2 samples, 2.82%)</title><rect x="30.9859%" y="1013" width="2.8169%" height="15" fill="rgb(221,65,9)" fg:x="22" fg:w="2"/><text x="31.2359%" y="1023.50">ti..</text></g><g><title>ti-smoked`serde_json::de::from_str (2 samples, 2.82%)</title><rect x="30.9859%" y="997" width="2.8169%" height="15" fill="rgb(235,49,36)" fg:x="22" fg:w="2"/><text x="31.2359%" y="1007.50">ti..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 2.82%)</title><rect x="30.9859%" y="981" width="2.8169%" height="15" fill="rgb(225,32,20)" fg:x="22" fg:w="2"/><text x="31.2359%" y="991.50">ti..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 2.82%)</title><rect x="30.9859%" y="965" width="2.8169%" height="15" fill="rgb(215,141,46)" fg:x="22" fg:w="2"/><text x="31.2359%" y="975.50">ti..</text></g><g><title>ti-smoked`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 2.82%)</title><rect x="30.9859%" y="949" width="2.8169%" height="15" fill="rgb(250,160,47)" fg:x="22" fg:w="2"/><text x="31.2359%" y="959.50">ti..</text></g><g><title>ti-smoked`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 2.82%)</title><rect x="30.9859%" y="933" width="2.8169%" height="15" fill="rgb(216,222,40)" fg:x="22" fg:w="2"/><text x="31.2359%" y="943.50">ti..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 2.82%)</title><rect x="30.9859%" y="917" width="2.8169%" height="15" fill="rgb(234,217,39)" fg:x="22" fg:w="2"/><text x="31.2359%" y="927.50">ti..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 2.82%)</title><rect x="30.9859%" y="901" width="2.8169%" height="15" fill="rgb(207,178,40)" fg:x="22" fg:w="2"/><text x="31.2359%" y="911.50">ti..</text></g><g><title>ti-smoked`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 2.82%)</title><rect x="30.9859%" y="885" width="2.8169%" height="15" fill="rgb(221,136,13)" fg:x="22" fg:w="2"/><text x="31.2359%" y="895.50">ti..</text></g><g><title>ti-smoked`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 2.82%)</title><rect x="30.9859%" y="869" width="2.8169%" height="15" fill="rgb(249,199,10)" fg:x="22" fg:w="2"/><text x="31.2359%" y="879.50">ti..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 2.82%)</title><rect x="30.9859%" y="853" width="2.8169%" height="15" fill="rgb(249,222,13)" fg:x="22" fg:w="2"/><text x="31.2359%" y="863.50">ti..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 1.41%)</title><rect x="32.3944%" y="837" width="1.4085%" height="15" fill="rgb(244,185,38)" fg:x="23" fg:w="1"/><text x="32.6444%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.41%)</title><rect x="33.8028%" y="981" width="1.4085%" height="15" fill="rgb(236,202,9)" fg:x="24" fg:w="1"/><text x="34.0528%" y="991.50"></text></g><g><title>libcoretls.dylib`tls_handshake_continue (1 samples, 1.41%)</title><rect x="35.2113%" y="741" width="1.4085%" height="15" fill="rgb(250,229,37)" fg:x="25" fg:w="1"/><text x="35.4613%" y="751.50"></text></g><g><title>libcoretls.dylib`SSLAdvanceHandshake (1 samples, 1.41%)</title><rect x="35.2113%" y="725" width="1.4085%" height="15" fill="rgb(206,174,23)" fg:x="25" fg:w="1"/><text x="35.4613%" y="735.50"></text></g><g><title>libcoretls.dylib`SSLPrepareAndQueueMessage (1 samples, 1.41%)</title><rect x="35.2113%" y="709" width="1.4085%" height="15" fill="rgb(211,33,43)" fg:x="25" fg:w="1"/><text x="35.4613%" y="719.50"></text></g><g><title>libcoretls.dylib`SSLEncodeKeyExchange (1 samples, 1.41%)</title><rect x="35.2113%" y="693" width="1.4085%" height="15" fill="rgb(245,58,50)" fg:x="25" fg:w="1"/><text x="35.4613%" y="703.50"></text></g><g><title>libcoretls.dylib`sslEcdhCreateKey (1 samples, 1.41%)</title><rect x="35.2113%" y="677" width="1.4085%" height="15" fill="rgb(244,68,36)" fg:x="25" fg:w="1"/><text x="35.4613%" y="687.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key (1 samples, 1.41%)</title><rect x="35.2113%" y="661" width="1.4085%" height="15" fill="rgb(232,229,15)" fg:x="25" fg:w="1"/><text x="35.4613%" y="671.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips (1 samples, 1.41%)</title><rect x="35.2113%" y="645" width="1.4085%" height="15" fill="rgb(254,30,23)" fg:x="25" fg:w="1"/><text x="35.4613%" y="655.50"></text></g><g><title>libcorecrypto.dylib`ccec_generate_key_fips_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="629" width="1.4085%" height="15" fill="rgb(235,160,14)" fg:x="25" fg:w="1"/><text x="35.4613%" y="639.50"></text></g><g><title>libcorecrypto.dylib`ccec_pairwise_consistency_check_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="613" width="1.4085%" height="15" fill="rgb(212,155,44)" fg:x="25" fg:w="1"/><text x="35.4613%" y="623.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="597" width="1.4085%" height="15" fill="rgb(226,2,50)" fg:x="25" fg:w="1"/><text x="35.4613%" y="607.50"></text></g><g><title>libcorecrypto.dylib`ccec_sign_internal_inner_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="581" width="1.4085%" height="15" fill="rgb(234,177,6)" fg:x="25" fg:w="1"/><text x="35.4613%" y="591.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_blinded_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="565" width="1.4085%" height="15" fill="rgb(217,24,9)" fg:x="25" fg:w="1"/><text x="35.4613%" y="575.50"></text></g><g><title>libcorecrypto.dylib`ccec_mult_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="549" width="1.4085%" height="15" fill="rgb(220,13,46)" fg:x="25" fg:w="1"/><text x="35.4613%" y="559.50"></text></g><g><title>libcorecrypto.dylib`ccec_full_add_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="533" width="1.4085%" height="15" fill="rgb(239,221,27)" fg:x="25" fg:w="1"/><text x="35.4613%" y="543.50"></text></g><g><title>libcorecrypto.dylib`ccec_add_ws (1 samples, 1.41%)</title><rect x="35.2113%" y="517" width="1.4085%" height="15" fill="rgb(222,198,25)" fg:x="25" fg:w="1"/><text x="35.4613%" y="527.50"></text></g><g><title>libcorecrypto.dylib`ccn_sub_asm (1 samples, 1.41%)</title><rect x="35.2113%" y="501" width="1.4085%" height="15" fill="rgb(211,99,13)" fg:x="25" fg:w="1"/><text x="35.4613%" y="511.50"></text></g><g><title>Security`SSLHandshake (2 samples, 2.82%)</title><rect x="35.2113%" y="773" width="2.8169%" height="15" fill="rgb(232,111,31)" fg:x="25" fg:w="2"/><text x="35.4613%" y="783.50">Se..</text></g><g><title>Security`SSLHandshakeProceed (2 samples, 2.82%)</title><rect x="35.2113%" y="757" width="2.8169%" height="15" fill="rgb(245,82,37)" fg:x="25" fg:w="2"/><text x="35.4613%" y="767.50">Se..</text></g><g><title>libcoretls.dylib`tls_handshake_process (1 samples, 1.41%)</title><rect x="36.6197%" y="741" width="1.4085%" height="15" fill="rgb(227,149,46)" fg:x="26" fg:w="1"/><text x="36.8697%" y="751.50"></text></g><g><title>libcoretls.dylib`SSLProcessHandshakeRecordInner (1 samples, 1.41%)</title><rect x="36.6197%" y="725" width="1.4085%" height="15" fill="rgb(218,36,50)" fg:x="26" fg:w="1"/><text x="36.8697%" y="735.50"></text></g><g><title>Security`tls_handshake_message_callback (1 samples, 1.41%)</title><rect x="36.6197%" y="709" width="1.4085%" height="15" fill="rgb(226,80,48)" fg:x="26" fg:w="1"/><text x="36.8697%" y="719.50"></text></g><g><title>libcoretls_cfhelpers.dylib`tls_helper_set_peer_pubkey (1 samples, 1.41%)</title><rect x="36.6197%" y="693" width="1.4085%" height="15" fill="rgb(238,224,15)" fg:x="26" fg:w="1"/><text x="36.8697%" y="703.50"></text></g><g><title>Security`SecTrustCopyPublicKey (1 samples, 1.41%)</title><rect x="36.6197%" y="677" width="1.4085%" height="15" fill="rgb(241,136,10)" fg:x="26" fg:w="1"/><text x="36.8697%" y="687.50"></text></g><g><title>Security`SecCertificateCopyPublicKey$LEGACYMAC (1 samples, 1.41%)</title><rect x="36.6197%" y="661" width="1.4085%" height="15" fill="rgb(208,32,45)" fg:x="26" fg:w="1"/><text x="36.8697%" y="671.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::publicKey (1 samples, 1.41%)</title><rect x="36.6197%" y="645" width="1.4085%" height="15" fill="rgb(207,135,9)" fg:x="26" fg:w="1"/><text x="36.8697%" y="655.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::copyFirstFieldValue (1 samples, 1.41%)</title><rect x="36.6197%" y="629" width="1.4085%" height="15" fill="rgb(206,86,44)" fg:x="26" fg:w="1"/><text x="36.8697%" y="639.50"></text></g><g><title>Security`Security::KeychainCore::Certificate::certHandle (1 samples, 1.41%)</title><rect x="36.6197%" y="613" width="1.4085%" height="15" fill="rgb(245,177,15)" fg:x="26" fg:w="1"/><text x="36.8697%" y="623.50"></text></g><g><title>Security`CSSM_CL_CertCache (1 samples, 1.41%)</title><rect x="36.6197%" y="597" width="1.4085%" height="15" fill="rgb(206,64,50)" fg:x="26" fg:w="1"/><text x="36.8697%" y="607.50"></text></g><g><title>Security`cssm_CertCache(long, cssm_data const*, long*) (1 samples, 1.41%)</title><rect x="36.6197%" y="581" width="1.4085%" height="15" fill="rgb(234,36,40)" fg:x="26" fg:w="1"/><text x="36.8697%" y="591.50"></text></g><g><title>Security`AppleX509CLSession::CertCache (1 samples, 1.41%)</title><rect x="36.6197%" y="565" width="1.4085%" height="15" fill="rgb(213,64,8)" fg:x="26" fg:w="1"/><text x="36.8697%" y="575.50"></text></g><g><title>Security`DecodedCert::DecodedCert (1 samples, 1.41%)</title><rect x="36.6197%" y="549" width="1.4085%" height="15" fill="rgb(210,75,36)" fg:x="26" fg:w="1"/><text x="36.8697%" y="559.50"></text></g><g><title>Security`SEC_ASN1Decode (1 samples, 1.41%)</title><rect x="36.6197%" y="533" width="1.4085%" height="15" fill="rgb(229,88,21)" fg:x="26" fg:w="1"/><text x="36.8697%" y="543.50"></text></g><g><title>Security`SEC_ASN1DecoderUpdate (1 samples, 1.41%)</title><rect x="36.6197%" y="517" width="1.4085%" height="15" fill="rgb(252,204,47)" fg:x="26" fg:w="1"/><text x="36.8697%" y="527.50"></text></g><g><title>ti-smoked`&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="981" width="4.2254%" height="15" fill="rgb(208,77,27)" fg:x="25" fg:w="3"/><text x="35.4613%" y="991.50">ti-sm..</text></g><g><title>ti-smoked`hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::_{{closure}} (3 samples, 4.23%)</title><rect x="35.2113%" y="965" width="4.2254%" height="15" fill="rgb(221,76,26)" fg:x="25" fg:w="3"/><text x="35.4613%" y="975.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="949" width="4.2254%" height="15" fill="rgb(225,139,18)" fg:x="25" fg:w="3"/><text x="35.4613%" y="959.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="933" width="4.2254%" height="15" fill="rgb(230,137,11)" fg:x="25" fg:w="3"/><text x="35.4613%" y="943.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="917" width="4.2254%" height="15" fill="rgb(212,28,1)" fg:x="25" fg:w="3"/><text x="35.4613%" y="927.50">ti-sm..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="901" width="4.2254%" height="15" fill="rgb(248,164,17)" fg:x="25" fg:w="3"/><text x="35.4613%" y="911.50">ti-sm..</text></g><g><title>ti-smoked`&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="885" width="4.2254%" height="15" fill="rgb(222,171,42)" fg:x="25" fg:w="3"/><text x="35.4613%" y="895.50">ti-sm..</text></g><g><title>ti-smoked`reqwest::connect::with_timeout::_{{closure}} (3 samples, 4.23%)</title><rect x="35.2113%" y="869" width="4.2254%" height="15" fill="rgb(243,84,45)" fg:x="25" fg:w="3"/><text x="35.4613%" y="879.50">ti-sm..</text></g><g><title>ti-smoked`reqwest::connect::Connector::connect_with_maybe_proxy::_{{closure}} (3 samples, 4.23%)</title><rect x="35.2113%" y="853" width="4.2254%" height="15" fill="rgb(252,49,23)" fg:x="25" fg:w="3"/><text x="35.4613%" y="863.50">ti-sm..</text></g><g><title>ti-smoked`&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (3 samples, 4.23%)</title><rect x="35.2113%" y="837" width="4.2254%" height="15" fill="rgb(215,19,7)" fg:x="25" fg:w="3"/><text x="35.4613%" y="847.50">ti-sm..</text></g><g><title>ti-smoked`&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (3 samples, 4.23%)</title><rect x="35.2113%" y="821" width="4.2254%" height="15" fill="rgb(238,81,41)" fg:x="25" fg:w="3"/><text x="35.4613%" y="831.50">ti-sm..</text></g><g><title>ti-smoked`native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (3 samples, 4.23%)</title><rect x="35.2113%" y="805" width="4.2254%" height="15" fill="rgb(210,199,37)" fg:x="25" fg:w="3"/><text x="35.4613%" y="815.50">ti-sm..</text></g><g><title>ti-smoked`security_framework::secure_transport::MidHandshakeClientBuilder&lt;S&gt;::handshake (3 samples, 4.23%)</title><rect x="35.2113%" y="789" width="4.2254%" height="15" fill="rgb(244,192,49)" fg:x="25" fg:w="3"/><text x="35.4613%" y="799.50">ti-sm..</text></g><g><title>ti-smoked`security_framework::policy::SecPolicy::create_ssl (1 samples, 1.41%)</title><rect x="38.0282%" y="773" width="1.4085%" height="15" fill="rgb(226,211,11)" fg:x="27" fg:w="1"/><text x="38.2782%" y="783.50"></text></g><g><title>Security`SecPolicyCreateSSL_internal (1 samples, 1.41%)</title><rect x="38.0282%" y="757" width="1.4085%" height="15" fill="rgb(236,162,54)" fg:x="27" fg:w="1"/><text x="38.2782%" y="767.50"></text></g><g><title>Security`add_eku (1 samples, 1.41%)</title><rect x="38.0282%" y="741" width="1.4085%" height="15" fill="rgb(220,229,9)" fg:x="27" fg:w="1"/><text x="38.2782%" y="751.50"></text></g><g><title>Security`add_element (1 samples, 1.41%)</title><rect x="38.0282%" y="725" width="1.4085%" height="15" fill="rgb(250,87,22)" fg:x="27" fg:w="1"/><text x="38.2782%" y="735.50"></text></g><g><title>CoreFoundation`__CFStringHash (1 samples, 1.41%)</title><rect x="38.0282%" y="709" width="1.4085%" height="15" fill="rgb(239,43,17)" fg:x="27" fg:w="1"/><text x="38.2782%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.41%)</title><rect x="39.4366%" y="965" width="1.4085%" height="15" fill="rgb(231,177,25)" fg:x="28" fg:w="1"/><text x="39.6866%" y="975.50"></text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibClient&gt;::do_post_request::_{{closure}} (6 samples, 8.45%)</title><rect x="33.8028%" y="997" width="8.4507%" height="15" fill="rgb(219,179,1)" fg:x="24" fg:w="6"/><text x="34.0528%" y="1007.50">ti-smoked`&lt;t..</text></g><g><title>ti-smoked`reqwest::async_impl::response::Response::text::_{{closure}} (2 samples, 2.82%)</title><rect x="39.4366%" y="981" width="2.8169%" height="15" fill="rgb(238,219,53)" fg:x="28" fg:w="2"/><text x="39.6866%" y="991.50">ti..</text></g><g><title>ti-smoked`&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (1 samples, 1.41%)</title><rect x="40.8451%" y="965" width="1.4085%" height="15" fill="rgb(232,167,36)" fg:x="29" fg:w="1"/><text x="41.0951%" y="975.50"></text></g><g><title>ti-smoked`&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (1 samples, 1.41%)</title><rect x="40.8451%" y="949" width="1.4085%" height="15" fill="rgb(244,19,51)" fg:x="29" fg:w="1"/><text x="41.0951%" y="959.50"></text></g><g><title>ti-smoked`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 1.41%)</title><rect x="40.8451%" y="933" width="1.4085%" height="15" fill="rgb(224,6,22)" fg:x="29" fg:w="1"/><text x="41.0951%" y="943.50"></text></g><g><title>ti-smoked`hyper::body::body::Body::poll_inner (1 samples, 1.41%)</title><rect x="40.8451%" y="917" width="1.4085%" height="15" fill="rgb(224,145,5)" fg:x="29" fg:w="1"/><text x="41.0951%" y="927.50"></text></g><g><title>ti-smoked`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 1.41%)</title><rect x="40.8451%" y="901" width="1.4085%" height="15" fill="rgb(234,130,49)" fg:x="29" fg:w="1"/><text x="41.0951%" y="911.50"></text></g><g><title>ti-smoked`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 1.41%)</title><rect x="40.8451%" y="885" width="1.4085%" height="15" fill="rgb(254,6,2)" fg:x="29" fg:w="1"/><text x="41.0951%" y="895.50"></text></g><g><title>ti-smoked`tokio::runtime::task::waker::wake_by_val (1 samples, 1.41%)</title><rect x="40.8451%" y="869" width="1.4085%" height="15" fill="rgb(208,96,46)" fg:x="29" fg:w="1"/><text x="41.0951%" y="879.50"></text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 1.41%)</title><rect x="40.8451%" y="853" width="1.4085%" height="15" fill="rgb(239,3,39)" fg:x="29" fg:w="1"/><text x="41.0951%" y="863.50"></text></g><g><title>ti-smoked`parking_lot::condvar::Condvar::notify_one_slow (1 samples, 1.41%)</title><rect x="40.8451%" y="837" width="1.4085%" height="15" fill="rgb(233,210,1)" fg:x="29" fg:w="1"/><text x="41.0951%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 1.41%)</title><rect x="40.8451%" y="821" width="1.4085%" height="15" fill="rgb(244,137,37)" fg:x="29" fg:w="1"/><text x="41.0951%" y="831.50"></text></g><g><title>ti-smoked`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 2.82%)</title><rect x="42.2535%" y="933" width="2.8169%" height="15" fill="rgb(240,136,2)" fg:x="30" fg:w="2"/><text x="42.5035%" y="943.50">ti..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 2.82%)</title><rect x="42.2535%" y="917" width="2.8169%" height="15" fill="rgb(239,18,37)" fg:x="30" fg:w="2"/><text x="42.5035%" y="927.50">ti..</text></g><g><title>ti-smoked`serde::de::MapAccess::next_value (2 samples, 2.82%)</title><rect x="42.2535%" y="901" width="2.8169%" height="15" fill="rgb(218,185,22)" fg:x="30" fg:w="2"/><text x="42.5035%" y="911.50">ti..</text></g><g><title>ti-smoked`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (2 samples, 2.82%)</title><rect x="42.2535%" y="885" width="2.8169%" height="15" fill="rgb(225,218,4)" fg:x="30" fg:w="2"/><text x="42.5035%" y="895.50">ti..</text></g><g><title>ti-smoked`ti_smoked::smoke::schema::_&lt;impl ti_smoked::smoke::SmokeTest for ti_smoked::smoke::SchemaTest&gt;::run::_{{closure}} (9 samples, 12.68%)</title><rect x="33.8028%" y="1045" width="12.6761%" height="15" fill="rgb(230,182,32)" fg:x="24" fg:w="9"/><text x="34.0528%" y="1055.50">ti-smoked`ti_smoked..</text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibraryApi&gt;::get_schema::_{{closure}} (9 samples, 12.68%)</title><rect x="33.8028%" y="1029" width="12.6761%" height="15" fill="rgb(242,56,43)" fg:x="24" fg:w="9"/><text x="34.0528%" y="1039.50">ti-smoked`&lt;ti_smoke..</text></g><g><title>ti-smoked`&lt;ti_smoked::commonlib::Client as ti_smoked::commonlib::CommonLibClient&gt;::post_request::_{{closure}} (9 samples, 12.68%)</title><rect x="33.8028%" y="1013" width="12.6761%" height="15" fill="rgb(233,99,24)" fg:x="24" fg:w="9"/><text x="34.0528%" y="1023.50">ti-smoked`&lt;ti_smoke..</text></g><g><title>ti-smoked`serde_json::de::from_str (3 samples, 4.23%)</title><rect x="42.2535%" y="997" width="4.2254%" height="15" fill="rgb(234,209,42)" fg:x="30" fg:w="3"/><text x="42.5035%" y="1007.50">ti-sm..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (3 samples, 4.23%)</title><rect x="42.2535%" y="981" width="4.2254%" height="15" fill="rgb(227,7,12)" fg:x="30" fg:w="3"/><text x="42.5035%" y="991.50">ti-sm..</text></g><g><title>ti-smoked`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (3 samples, 4.23%)</title><rect x="42.2535%" y="965" width="4.2254%" height="15" fill="rgb(245,203,43)" fg:x="30" fg:w="3"/><text x="42.5035%" y="975.50">ti-sm..</text></g><g><title>ti-smoked`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 4.23%)</title><rect x="42.2535%" y="949" width="4.2254%" height="15" fill="rgb(238,205,33)" fg:x="30" fg:w="3"/><text x="42.5035%" y="959.50">ti-sm..</text></g><g><title>ti-smoked`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.41%)</title><rect x="45.0704%" y="933" width="1.4085%" height="15" fill="rgb(231,56,7)" fg:x="32" fg:w="1"/><text x="45.3204%" y="943.50"></text></g><g><title>ti-smoked`alloc::raw_vec::finish_grow (1 samples, 1.41%)</title><rect x="45.0704%" y="917" width="1.4085%" height="15" fill="rgb(244,186,29)" fg:x="32" fg:w="1"/><text x="45.3204%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 1.41%)</title><rect x="45.0704%" y="901" width="1.4085%" height="15" fill="rgb(234,111,31)" fg:x="32" fg:w="1"/><text x="45.3204%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 1.41%)</title><rect x="45.0704%" y="885" width="1.4085%" height="15" fill="rgb(241,149,10)" fg:x="32" fg:w="1"/><text x="45.3204%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 1.41%)</title><rect x="45.0704%" y="869" width="1.4085%" height="15" fill="rgb(249,206,44)" fg:x="32" fg:w="1"/><text x="45.3204%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 1.41%)</title><rect x="45.0704%" y="853" width="1.4085%" height="15" fill="rgb(251,153,30)" fg:x="32" fg:w="1"/><text x="45.3204%" y="863.50"></text></g><g><title>ti-smoked`tokio::runtime::context::with_defer (1 samples, 1.41%)</title><rect x="46.4789%" y="1045" width="1.4085%" height="15" fill="rgb(239,152,38)" fg:x="33" fg:w="1"/><text x="46.7289%" y="1055.50"></text></g><g><title>ti-smoked`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.41%)</title><rect x="46.4789%" y="1029" width="1.4085%" height="15" fill="rgb(249,139,47)" fg:x="33" fg:w="1"/><text x="46.7289%" y="1039.50"></text></g><g><title>dyld`start (35 samples, 49.30%)</title><rect x="0.0000%" y="1173" width="49.2958%" height="15" fill="rgb(244,64,35)" fg:x="0" fg:w="35"/><text x="0.2500%" y="1183.50">dyld`start</text></g><g><title>ti-smoked`main (34 samples, 47.89%)</title><rect x="1.4085%" y="1157" width="47.8873%" height="15" fill="rgb(216,46,15)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1167.50">ti-smoked`main</text></g><g><title>ti-smoked`std::rt::lang_start_internal (34 samples, 47.89%)</title><rect x="1.4085%" y="1141" width="47.8873%" height="15" fill="rgb(250,74,19)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1151.50">ti-smoked`std::rt::lang_start_internal</text></g><g><title>ti-smoked`std::rt::lang_start::_{{closure}} (34 samples, 47.89%)</title><rect x="1.4085%" y="1125" width="47.8873%" height="15" fill="rgb(249,42,33)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1135.50">ti-smoked`std::rt::lang_start::_{{closure}}</text></g><g><title>ti-smoked`std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 47.89%)</title><rect x="1.4085%" y="1109" width="47.8873%" height="15" fill="rgb(242,149,17)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1119.50">ti-smoked`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>ti-smoked`ti_smoked::main (34 samples, 47.89%)</title><rect x="1.4085%" y="1093" width="47.8873%" height="15" fill="rgb(244,29,21)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1103.50">ti-smoked`ti_smoked::main</text></g><g><title>ti-smoked`tokio::runtime::runtime::Runtime::block_on (34 samples, 47.89%)</title><rect x="1.4085%" y="1077" width="47.8873%" height="15" fill="rgb(220,130,37)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1087.50">ti-smoked`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>ti-smoked`tokio::runtime::park::CachedParkThread::block_on (34 samples, 47.89%)</title><rect x="1.4085%" y="1061" width="47.8873%" height="15" fill="rgb(211,67,2)" fg:x="1" fg:w="34"/><text x="1.6585%" y="1071.50">ti-smoked`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>ti-smoked`tokio::runtime::park::Inner::park (1 samples, 1.41%)</title><rect x="47.8873%" y="1045" width="1.4085%" height="15" fill="rgb(235,68,52)" fg:x="34" fg:w="1"/><text x="48.1373%" y="1055.50"></text></g><g><title>ti-smoked`parking_lot::condvar::Condvar::wait_until_internal (1 samples, 1.41%)</title><rect x="47.8873%" y="1029" width="1.4085%" height="15" fill="rgb(246,142,3)" fg:x="34" fg:w="1"/><text x="48.1373%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 1.41%)</title><rect x="47.8873%" y="1013" width="1.4085%" height="15" fill="rgb(241,25,7)" fg:x="34" fg:w="1"/><text x="48.1373%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 1.41%)</title><rect x="49.2958%" y="1173" width="1.4085%" height="15" fill="rgb(242,119,39)" fg:x="35" fg:w="1"/><text x="49.5458%" y="1183.50"></text></g><g><title>ti-smoked`parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 2.82%)</title><rect x="50.7042%" y="1077" width="2.8169%" height="15" fill="rgb(241,98,45)" fg:x="36" fg:w="2"/><text x="50.9542%" y="1087.50">ti..</text></g><g><title>libsystem_kernel.dylib`swtch_pri (2 samples, 2.82%)</title><rect x="50.7042%" y="1061" width="2.8169%" height="15" fill="rgb(254,28,30)" fg:x="36" fg:w="2"/><text x="50.9542%" y="1071.50">li..</text></g><g><title>Network`nw_path_create_evaluator_for_endpoint_no_evaluate (1 samples, 1.41%)</title><rect x="53.5211%" y="933" width="1.4085%" height="15" fill="rgb(241,142,54)" fg:x="38" fg:w="1"/><text x="53.7711%" y="943.50"></text></g><g><title>Network`-[NWConcrete_nw_parameters initWithStack:] (1 samples, 1.41%)</title><rect x="53.5211%" y="917" width="1.4085%" height="15" fill="rgb(222,85,15)" fg:x="38" fg:w="1"/><text x="53.7711%" y="927.50"></text></g><g><title>Network`networkd_settings_init (1 samples, 1.41%)</title><rect x="53.5211%" y="901" width="1.4085%" height="15" fill="rgb(210,85,47)" fg:x="38" fg:w="1"/><text x="53.7711%" y="911.50"></text></g><g><title>Network`networkd_settings_read_from_file() (1 samples, 1.41%)</title><rect x="53.5211%" y="885" width="1.4085%" height="15" fill="rgb(224,206,25)" fg:x="38" fg:w="1"/><text x="53.7711%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 1.41%)</title><rect x="53.5211%" y="869" width="1.4085%" height="15" fill="rgb(243,201,19)" fg:x="38" fg:w="1"/><text x="53.7711%" y="879.50"></text></g><g><title>ti-smoked`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 2.82%)</title><rect x="53.5211%" y="1045" width="2.8169%" height="15" fill="rgb(236,59,4)" fg:x="38" fg:w="2"/><text x="53.7711%" y="1055.50">ti..</text></g><g><title>ti-smoked`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (2 samples, 2.82%)</title><rect x="53.5211%" y="1029" width="2.8169%" height="15" fill="rgb(254,179,45)" fg:x="38" fg:w="2"/><text x="53.7711%" y="1039.50">ti..</text></g><g><title>ti-smoked`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (2 samples, 2.82%)</title><rect x="53.5211%" y="1013" width="2.8169%" height="15" fill="rgb(226,14,10)" fg:x="38" fg:w="2"/><text x="53.7711%" y="1023.50">ti..</text></g><g><title>libsystem_info.dylib`getaddrinfo (2 samples, 2.82%)</title><rect x="53.5211%" y="997" width="2.8169%" height="15" fill="rgb(244,27,41)" fg:x="38" fg:w="2"/><text x="53.7711%" y="1007.50">li..</text></g><g><title>libsystem_info.dylib`si_addrinfo (2 samples, 2.82%)</title><rect x="53.5211%" y="981" width="2.8169%" height="15" fill="rgb(235,35,32)" fg:x="38" fg:w="2"/><text x="53.7711%" y="991.50">li..</text></g><g><title>Network`nw_nat64_v4_address_requires_synthesis (2 samples, 2.82%)</title><rect x="53.5211%" y="965" width="2.8169%" height="15" fill="rgb(218,68,31)" fg:x="38" fg:w="2"/><text x="53.7711%" y="975.50">Ne..</text></g><g><title>Network`nw_path_create_evaluator_for_endpoint (2 samples, 2.82%)</title><rect x="53.5211%" y="949" width="2.8169%" height="15" fill="rgb(207,120,37)" fg:x="38" fg:w="2"/><text x="53.7711%" y="959.50">Ne..</text></g><g><title>Network`nw_path_evaluator_evaluate (1 samples, 1.41%)</title><rect x="54.9296%" y="933" width="1.4085%" height="15" fill="rgb(227,98,0)" fg:x="39" fg:w="1"/><text x="55.1796%" y="943.50"></text></g><g><title>Network`nw_path_snapshot_path (1 samples, 1.41%)</title><rect x="54.9296%" y="917" width="1.4085%" height="15" fill="rgb(207,7,3)" fg:x="39" fg:w="1"/><text x="55.1796%" y="927.50"></text></g><g><title>Network`nw_path_snapshot_agents (1 samples, 1.41%)</title><rect x="54.9296%" y="901" width="1.4085%" height="15" fill="rgb(206,98,19)" fg:x="39" fg:w="1"/><text x="55.1796%" y="911.50"></text></g><g><title>Network`nw_path_copy_dictionary_for_agent_with_generation (1 samples, 1.41%)</title><rect x="54.9296%" y="885" width="1.4085%" height="15" fill="rgb(217,5,26)" fg:x="39" fg:w="1"/><text x="55.1796%" y="895.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up (1 samples, 1.41%)</title><rect x="54.9296%" y="869" width="1.4085%" height="15" fill="rgb(235,190,38)" fg:x="39" fg:w="1"/><text x="55.1796%" y="879.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_look_up_table (1 samples, 1.41%)</title><rect x="54.9296%" y="853" width="1.4085%" height="15" fill="rgb(247,86,24)" fg:x="39" fg:w="1"/><text x="55.1796%" y="863.50"></text></g><g><title>libxpc.dylib`_hash_bucket (1 samples, 1.41%)</title><rect x="54.9296%" y="837" width="1.4085%" height="15" fill="rgb(205,101,16)" fg:x="39" fg:w="1"/><text x="55.1796%" y="847.50"></text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 1.41%)</title><rect x="56.3380%" y="981" width="1.4085%" height="15" fill="rgb(246,168,33)" fg:x="40" fg:w="1"/><text x="56.5880%" y="991.50"></text></g><g><title>ti-smoked`parking_lot::condvar::Condvar::wait_until_internal (2 samples, 2.82%)</title><rect x="57.7465%" y="949" width="2.8169%" height="15" fill="rgb(231,114,1)" fg:x="41" fg:w="2"/><text x="57.9965%" y="959.50">ti..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2 samples, 2.82%)</title><rect x="57.7465%" y="933" width="2.8169%" height="15" fill="rgb(207,184,53)" fg:x="41" fg:w="2"/><text x="57.9965%" y="943.50">li..</text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (6 samples, 8.45%)</title><rect x="57.7465%" y="981" width="8.4507%" height="15" fill="rgb(224,95,51)" fg:x="41" fg:w="6"/><text x="57.9965%" y="991.50">ti-smoked`to..</text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::park::Parker::park (6 samples, 8.45%)</title><rect x="57.7465%" y="965" width="8.4507%" height="15" fill="rgb(212,188,45)" fg:x="41" fg:w="6"/><text x="57.9965%" y="975.50">ti-smoked`to..</text></g><g><title>ti-smoked`tokio::runtime::time::Driver::park_internal (4 samples, 5.63%)</title><rect x="60.5634%" y="949" width="5.6338%" height="15" fill="rgb(223,154,38)" fg:x="43" fg:w="4"/><text x="60.8134%" y="959.50">ti-smok..</text></g><g><title>ti-smoked`tokio::runtime::io::Driver::turn (3 samples, 4.23%)</title><rect x="61.9718%" y="933" width="4.2254%" height="15" fill="rgb(251,22,52)" fg:x="44" fg:w="3"/><text x="62.2218%" y="943.50">ti-sm..</text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 4.23%)</title><rect x="61.9718%" y="917" width="4.2254%" height="15" fill="rgb(229,209,22)" fg:x="44" fg:w="3"/><text x="62.2218%" y="927.50">libsy..</text></g><g><title>ti-smoked`parking_lot::condvar::Condvar::notify_one_slow (1 samples, 1.41%)</title><rect x="66.1972%" y="965" width="1.4085%" height="15" fill="rgb(234,138,34)" fg:x="47" fg:w="1"/><text x="66.4472%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 1.41%)</title><rect x="66.1972%" y="949" width="1.4085%" height="15" fill="rgb(212,95,11)" fg:x="47" fg:w="1"/><text x="66.4472%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 1.41%)</title><rect x="67.6056%" y="853" width="1.4085%" height="15" fill="rgb(240,179,47)" fg:x="48" fg:w="1"/><text x="67.8556%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 1.41%)</title><rect x="70.4225%" y="805" width="1.4085%" height="15" fill="rgb(240,163,11)" fg:x="50" fg:w="1"/><text x="70.6725%" y="815.50"></text></g><g><title>ti-smoked`hyper::body::body::Sender::try_send_data (4 samples, 5.63%)</title><rect x="67.6056%" y="869" width="5.6338%" height="15" fill="rgb(236,37,12)" fg:x="48" fg:w="4"/><text x="67.8556%" y="879.50">ti-smok..</text></g><g><title>ti-smoked`futures_channel::mpsc::Sender&lt;T&gt;::try_send (3 samples, 4.23%)</title><rect x="69.0141%" y="853" width="4.2254%" height="15" fill="rgb(232,164,16)" fg:x="49" fg:w="3"/><text x="69.2641%" y="863.50">ti-sm..</text></g><g><title>ti-smoked`tokio::runtime::park::wake (3 samples, 4.23%)</title><rect x="69.0141%" y="837" width="4.2254%" height="15" fill="rgb(244,205,15)" fg:x="49" fg:w="3"/><text x="69.2641%" y="847.50">ti-sm..</text></g><g><title>ti-smoked`parking_lot::condvar::Condvar::notify_one_slow (3 samples, 4.23%)</title><rect x="69.0141%" y="821" width="4.2254%" height="15" fill="rgb(223,117,47)" fg:x="49" fg:w="3"/><text x="69.2641%" y="831.50">ti-sm..</text></g><g><title>ti-smoked`parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 1.41%)</title><rect x="71.8310%" y="805" width="1.4085%" height="15" fill="rgb(244,107,35)" fg:x="51" fg:w="1"/><text x="72.0810%" y="815.50"></text></g><g><title>ti-smoked`hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (1 samples, 1.41%)</title><rect x="73.2394%" y="869" width="1.4085%" height="15" fill="rgb(205,140,8)" fg:x="52" fg:w="1"/><text x="73.4894%" y="879.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_gmac (1 samples, 1.41%)</title><rect x="74.6479%" y="741" width="1.4085%" height="15" fill="rgb(228,84,46)" fg:x="53" fg:w="1"/><text x="74.8979%" y="751.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init_with_iv (1 samples, 1.41%)</title><rect x="76.0563%" y="741" width="1.4085%" height="15" fill="rgb(254,188,9)" fg:x="54" fg:w="1"/><text x="76.3063%" y="751.50"></text></g><g><title>libcorecrypto.dylib`ccgcm_init (1 samples, 1.41%)</title><rect x="76.0563%" y="725" width="1.4085%" height="15" fill="rgb(206,112,54)" fg:x="54" fg:w="1"/><text x="76.3063%" y="735.50"></text></g><g><title>libcorecrypto.dylib`aes_key_expansion (1 samples, 1.41%)</title><rect x="76.0563%" y="709" width="1.4085%" height="15" fill="rgb(216,84,49)" fg:x="54" fg:w="1"/><text x="76.3063%" y="719.50"></text></g><g><title>libcoretls.dylib`tls_record_decrypt (4 samples, 5.63%)</title><rect x="74.6479%" y="757" width="5.6338%" height="15" fill="rgb(214,194,35)" fg:x="53" fg:w="4"/><text x="74.8979%" y="767.50">libcore..</text></g><g><title>libcoretls.dylib`SSLDecryptRecord (2 samples, 2.82%)</title><rect x="77.4648%" y="741" width="2.8169%" height="15" fill="rgb(249,28,3)" fg:x="55" fg:w="2"/><text x="77.7148%" y="751.50">li..</text></g><g><title>libcoretls.dylib`CCSymmAEADDecrypt (2 samples, 2.82%)</title><rect x="77.4648%" y="725" width="2.8169%" height="15" fill="rgb(222,56,52)" fg:x="55" fg:w="2"/><text x="77.7148%" y="735.50">li..</text></g><g><title>libcorecrypto.dylib`ccgcm_update (2 samples, 2.82%)</title><rect x="77.4648%" y="709" width="2.8169%" height="15" fill="rgb(245,217,50)" fg:x="55" fg:w="2"/><text x="77.7148%" y="719.50">li..</text></g><g><title>libcorecrypto.dylib`Decrypt_Main_Loop (2 samples, 2.82%)</title><rect x="77.4648%" y="693" width="2.8169%" height="15" fill="rgb(213,201,24)" fg:x="55" fg:w="2"/><text x="77.7148%" y="703.50">li..</text></g><g><title>ti-smoked`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (11 samples, 15.49%)</title><rect x="74.6479%" y="869" width="15.4930%" height="15" fill="rgb(248,116,28)" fg:x="53" fg:w="11"/><text x="74.8979%" y="879.50">ti-smoked`hyper::proto::..</text></g><g><title>ti-smoked`hyper::proto::h1::decode::Decoder::decode (11 samples, 15.49%)</title><rect x="74.6479%" y="853" width="15.4930%" height="15" fill="rgb(219,72,43)" fg:x="53" fg:w="11"/><text x="74.8979%" y="863.50">ti-smoked`hyper::proto::..</text></g><g><title>ti-smoked`&lt;hyper::proto::h1::io::Buffered&lt;T,B&gt; as hyper::proto::h1::io::MemRead&gt;::read_mem (11 samples, 15.49%)</title><rect x="74.6479%" y="837" width="15.4930%" height="15" fill="rgb(209,138,14)" fg:x="53" fg:w="11"/><text x="74.8979%" y="847.50">ti-smoked`&lt;hyper::proto:..</text></g><g><title>ti-smoked`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (11 samples, 15.49%)</title><rect x="74.6479%" y="821" width="15.4930%" height="15" fill="rgb(222,18,33)" fg:x="53" fg:w="11"/><text x="74.8979%" y="831.50">ti-smoked`hyper::proto::..</text></g><g><title>ti-smoked`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (11 samples, 15.49%)</title><rect x="74.6479%" y="805" width="15.4930%" height="15" fill="rgb(213,199,7)" fg:x="53" fg:w="11"/><text x="74.8979%" y="815.50">ti-smoked`&lt;tokio_native_..</text></g><g><title>Security`SSLRead (11 samples, 15.49%)</title><rect x="74.6479%" y="789" width="15.4930%" height="15" fill="rgb(250,110,10)" fg:x="53" fg:w="11"/><text x="74.8979%" y="799.50">Security`SSLRead</text></g><g><title>Security`SSLRecordReadInternal (11 samples, 15.49%)</title><rect x="74.6479%" y="773" width="15.4930%" height="15" fill="rgb(248,123,6)" fg:x="53" fg:w="11"/><text x="74.8979%" y="783.50">Security`SSLRecordReadIn..</text></g><g><title>ti-smoked`security_framework::secure_transport::read_func (7 samples, 9.86%)</title><rect x="80.2817%" y="757" width="9.8592%" height="15" fill="rgb(206,91,31)" fg:x="57" fg:w="7"/><text x="80.5317%" y="767.50">ti-smoked`secu..</text></g><g><title>ti-smoked`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (7 samples, 9.86%)</title><rect x="80.2817%" y="741" width="9.8592%" height="15" fill="rgb(211,154,13)" fg:x="57" fg:w="7"/><text x="80.5317%" y="751.50">ti-smoked`&lt;tok..</text></g><g><title>ti-smoked`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (7 samples, 9.86%)</title><rect x="80.2817%" y="725" width="9.8592%" height="15" fill="rgb(225,148,7)" fg:x="57" fg:w="7"/><text x="80.5317%" y="735.50">ti-smoked`toki..</text></g><g><title>ti-smoked`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (7 samples, 9.86%)</title><rect x="80.2817%" y="709" width="9.8592%" height="15" fill="rgb(220,160,43)" fg:x="57" fg:w="7"/><text x="80.5317%" y="719.50">ti-smoked`&lt;&amp;mi..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (7 samples, 9.86%)</title><rect x="80.2817%" y="693" width="9.8592%" height="15" fill="rgb(213,52,39)" fg:x="57" fg:w="7"/><text x="80.5317%" y="703.50">libsystem_kern..</text></g><g><title>ti-smoked`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 1.41%)</title><rect x="90.1408%" y="869" width="1.4085%" height="15" fill="rgb(243,137,7)" fg:x="64" fg:w="1"/><text x="90.3908%" y="879.50"></text></g><g><title>ti-smoked`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 1.41%)</title><rect x="90.1408%" y="853" width="1.4085%" height="15" fill="rgb(230,79,13)" fg:x="64" fg:w="1"/><text x="90.3908%" y="863.50"></text></g><g><title>ti-smoked`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 1.41%)</title><rect x="90.1408%" y="837" width="1.4085%" height="15" fill="rgb(247,105,23)" fg:x="64" fg:w="1"/><text x="90.3908%" y="847.50"></text></g><g><title>ti-smoked`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 1.41%)</title><rect x="90.1408%" y="821" width="1.4085%" height="15" fill="rgb(223,179,41)" fg:x="64" fg:w="1"/><text x="90.3908%" y="831.50"></text></g><g><title>Security`SSLRead (1 samples, 1.41%)</title><rect x="90.1408%" y="805" width="1.4085%" height="15" fill="rgb(218,9,34)" fg:x="64" fg:w="1"/><text x="90.3908%" y="815.50"></text></g><g><title>Security`SSLRecordReadInternal (1 samples, 1.41%)</title><rect x="90.1408%" y="789" width="1.4085%" height="15" fill="rgb(222,106,8)" fg:x="64" fg:w="1"/><text x="90.3908%" y="799.50"></text></g><g><title>ti-smoked`security_framework::secure_transport::read_func (1 samples, 1.41%)</title><rect x="90.1408%" y="773" width="1.4085%" height="15" fill="rgb(211,220,0)" fg:x="64" fg:w="1"/><text x="90.3908%" y="783.50"></text></g><g><title>ti-smoked`&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 1.41%)</title><rect x="90.1408%" y="757" width="1.4085%" height="15" fill="rgb(229,52,16)" fg:x="64" fg:w="1"/><text x="90.3908%" y="767.50"></text></g><g><title>ti-smoked`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 1.41%)</title><rect x="90.1408%" y="741" width="1.4085%" height="15" fill="rgb(212,155,18)" fg:x="64" fg:w="1"/><text x="90.3908%" y="751.50"></text></g><g><title>ti-smoked`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 1.41%)</title><rect x="90.1408%" y="725" width="1.4085%" height="15" fill="rgb(242,21,14)" fg:x="64" fg:w="1"/><text x="90.3908%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1 samples, 1.41%)</title><rect x="90.1408%" y="709" width="1.4085%" height="15" fill="rgb(222,19,48)" fg:x="64" fg:w="1"/><text x="90.3908%" y="719.50"></text></g><g><title>ti-smoked`&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 1.41%)</title><rect x="91.5493%" y="837" width="1.4085%" height="15" fill="rgb(232,45,27)" fg:x="65" fg:w="1"/><text x="91.7993%" y="847.50"></text></g><g><title>ti-smoked`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (2 samples, 2.82%)</title><rect x="91.5493%" y="869" width="2.8169%" height="15" fill="rgb(249,103,42)" fg:x="65" fg:w="2"/><text x="91.7993%" y="879.50">ti..</text></g><g><title>ti-smoked`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (2 samples, 2.82%)</title><rect x="91.5493%" y="853" width="2.8169%" height="15" fill="rgb(246,81,33)" fg:x="65" fg:w="2"/><text x="91.7993%" y="863.50">ti..</text></g><g><title>ti-smoked`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 1.41%)</title><rect x="92.9577%" y="837" width="1.4085%" height="15" fill="rgb(252,33,42)" fg:x="66" fg:w="1"/><text x="93.2077%" y="847.50"></text></g><g><title>ti-smoked`bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 1.41%)</title><rect x="92.9577%" y="821" width="1.4085%" height="15" fill="rgb(209,212,41)" fg:x="66" fg:w="1"/><text x="93.2077%" y="831.50"></text></g><g><title>ti-smoked`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.41%)</title><rect x="92.9577%" y="805" width="1.4085%" height="15" fill="rgb(207,154,6)" fg:x="66" fg:w="1"/><text x="93.2077%" y="815.50"></text></g><g><title>ti-smoked`alloc::raw_vec::finish_grow (1 samples, 1.41%)</title><rect x="92.9577%" y="789" width="1.4085%" height="15" fill="rgb(223,64,47)" fg:x="66" fg:w="1"/><text x="93.2077%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 1.41%)</title><rect x="92.9577%" y="773" width="1.4085%" height="15" fill="rgb(211,161,38)" fg:x="66" fg:w="1"/><text x="93.2077%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 1.41%)</title><rect x="92.9577%" y="757" width="1.4085%" height="15" fill="rgb(219,138,40)" fg:x="66" fg:w="1"/><text x="93.2077%" y="767.50"></text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (21 samples, 29.58%)</title><rect x="66.1972%" y="981" width="29.5775%" height="15" fill="rgb(241,228,46)" fg:x="47" fg:w="21"/><text x="66.4472%" y="991.50">ti-smoked`tokio::runtime::scheduler::multi_threa..</text></g><g><title>ti-smoked`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (20 samples, 28.17%)</title><rect x="67.6056%" y="965" width="28.1690%" height="15" fill="rgb(223,209,38)" fg:x="48" fg:w="20"/><text x="67.8556%" y="975.50">ti-smoked`tokio::runtime::task::harness::Harn..</text></g><g><title>ti-smoked`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (20 samples, 28.17%)</title><rect x="67.6056%" y="949" width="28.1690%" height="15" fill="rgb(236,164,45)" fg:x="48" fg:w="20"/><text x="67.8556%" y="959.50">ti-smoked`tokio::runtime::task::core::Core&lt;T,..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (20 samples, 28.17%)</title><rect x="67.6056%" y="933" width="28.1690%" height="15" fill="rgb(231,15,5)" fg:x="48" fg:w="20"/><text x="67.8556%" y="943.50">ti-smoked`&lt;futures_util::future::future::map:..</text></g><g><title>ti-smoked`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (20 samples, 28.17%)</title><rect x="67.6056%" y="917" width="28.1690%" height="15" fill="rgb(252,35,15)" fg:x="48" fg:w="20"/><text x="67.8556%" y="927.50">ti-smoked`&lt;futures_util::future::future::map:..</text></g><g><title>ti-smoked`&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (20 samples, 28.17%)</title><rect x="67.6056%" y="901" width="28.1690%" height="15" fill="rgb(248,181,18)" fg:x="48" fg:w="20"/><text x="67.8556%" y="911.50">ti-smoked`&lt;hyper::client::conn::Connection&lt;T,..</text></g><g><title>ti-smoked`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (20 samples, 28.17%)</title><rect x="67.6056%" y="885" width="28.1690%" height="15" fill="rgb(233,39,42)" fg:x="48" fg:w="20"/><text x="67.8556%" y="895.50">ti-smoked`hyper::proto::h1::dispatch::Dispatc..</text></g><g><title>ti-smoked`tokio::sync::oneshot::Sender&lt;T&gt;::poll_closed (1 samples, 1.41%)</title><rect x="94.3662%" y="869" width="1.4085%" height="15" fill="rgb(238,110,33)" fg:x="67" fg:w="1"/><text x="94.6162%" y="879.50"></text></g><g><title>ti-smoked`tokio::sync::oneshot::State::load (1 samples, 1.41%)</title><rect x="94.3662%" y="853" width="1.4085%" height="15" fill="rgb(233,195,10)" fg:x="67" fg:w="1"/><text x="94.6162%" y="863.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 1.41%)</title><rect x="95.7746%" y="917" width="1.4085%" height="15" fill="rgb(254,105,3)" fg:x="68" fg:w="1"/><text x="96.0246%" y="927.50"></text></g><g><title>Security`SSLContextDestroy (1 samples, 1.41%)</title><rect x="95.7746%" y="901" width="1.4085%" height="15" fill="rgb(221,225,9)" fg:x="68" fg:w="1"/><text x="96.0246%" y="911.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 1.41%)</title><rect x="95.7746%" y="885" width="1.4085%" height="15" fill="rgb(224,227,45)" fg:x="68" fg:w="1"/><text x="96.0246%" y="895.50"></text></g><g><title>Security`SecTrustDestroy (1 samples, 1.41%)</title><rect x="95.7746%" y="869" width="1.4085%" height="15" fill="rgb(229,198,43)" fg:x="68" fg:w="1"/><text x="96.0246%" y="879.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 1.41%)</title><rect x="95.7746%" y="853" width="1.4085%" height="15" fill="rgb(206,209,35)" fg:x="68" fg:w="1"/><text x="96.0246%" y="863.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 1.41%)</title><rect x="95.7746%" y="837" width="1.4085%" height="15" fill="rgb(245,195,53)" fg:x="68" fg:w="1"/><text x="96.0246%" y="847.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 1.41%)</title><rect x="95.7746%" y="821" width="1.4085%" height="15" fill="rgb(240,92,26)" fg:x="68" fg:w="1"/><text x="96.0246%" y="831.50"></text></g><g><title>Security`SecCertificateDestroy (1 samples, 1.41%)</title><rect x="95.7746%" y="805" width="1.4085%" height="15" fill="rgb(207,40,23)" fg:x="68" fg:w="1"/><text x="96.0246%" y="815.50"></text></g><g><title>ti-smoked`tokio::runtime::blocking::pool::Inner::run (34 samples, 47.89%)</title><rect x="50.7042%" y="1093" width="47.8873%" height="15" fill="rgb(223,111,35)" fg:x="36" fg:w="34"/><text x="50.9542%" y="1103.50">ti-smoked`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>ti-smoked`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (32 samples, 45.07%)</title><rect x="53.5211%" y="1077" width="45.0704%" height="15" fill="rgb(229,147,28)" fg:x="38" fg:w="32"/><text x="53.7711%" y="1087.50">ti-smoked`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>ti-smoked`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (32 samples, 45.07%)</title><rect x="53.5211%" y="1061" width="45.0704%" height="15" fill="rgb(211,29,28)" fg:x="38" fg:w="32"/><text x="53.7711%" y="1071.50">ti-smoked`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>ti-smoked`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 42.25%)</title><rect x="56.3380%" y="1045" width="42.2535%" height="15" fill="rgb(228,72,33)" fg:x="40" fg:w="30"/><text x="56.5880%" y="1055.50">ti-smoked`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::worker::run (30 samples, 42.25%)</title><rect x="56.3380%" y="1029" width="42.2535%" height="15" fill="rgb(205,214,31)" fg:x="40" fg:w="30"/><text x="56.5880%" y="1039.50">ti-smoked`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>ti-smoked`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (30 samples, 42.25%)</title><rect x="56.3380%" y="1013" width="42.2535%" height="15" fill="rgb(224,111,15)" fg:x="40" fg:w="30"/><text x="56.5880%" y="1023.50">ti-smoked`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>ti-smoked`tokio::runtime::scheduler::multi_thread::worker::Context::run (30 samples, 42.25%)</title><rect x="56.3380%" y="997" width="42.2535%" height="15" fill="rgb(253,21,26)" fg:x="40" fg:w="30"/><text x="56.5880%" y="1007.50">ti-smoked`tokio::runtime::scheduler::multi_thread::worker::Context::r..</text></g><g><title>ti-smoked`tokio::runtime::task::harness::Harness&lt;T,S&gt;::shutdown (2 samples, 2.82%)</title><rect x="95.7746%" y="981" width="2.8169%" height="15" fill="rgb(245,139,43)" fg:x="68" fg:w="2"/><text x="96.0246%" y="991.50">ti..</text></g><g><title>ti-smoked`std::panicking::try (2 samples, 2.82%)</title><rect x="95.7746%" y="965" width="2.8169%" height="15" fill="rgb(252,170,7)" fg:x="68" fg:w="2"/><text x="96.0246%" y="975.50">ti..</text></g><g><title>ti-smoked`core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::MapErr&lt;hyper::client::conn::Connection&lt;reqwest::connect::Conn,reqwest::async_impl::body::ImplStream&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}::{{closure}}&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (2 samples, 2.82%)</title><rect x="95.7746%" y="949" width="2.8169%" height="15" fill="rgb(231,118,14)" fg:x="68" fg:w="2"/><text x="96.0246%" y="959.50">ti..</text></g><g><title>ti-smoked`core::ptr::drop_in_place&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (2 samples, 2.82%)</title><rect x="95.7746%" y="933" width="2.8169%" height="15" fill="rgb(238,83,0)" fg:x="68" fg:w="2"/><text x="96.0246%" y="943.50">ti..</text></g><g><title>ti-smoked`core::ptr::drop_in_place&lt;security_framework::secure_transport::Connection&lt;tokio_native_tls::AllowStd&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;&gt; (1 samples, 1.41%)</title><rect x="97.1831%" y="917" width="1.4085%" height="15" fill="rgb(221,39,39)" fg:x="69" fg:w="1"/><text x="97.4331%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`close (1 samples, 1.41%)</title><rect x="97.1831%" y="901" width="1.4085%" height="15" fill="rgb(222,119,46)" fg:x="69" fg:w="1"/><text x="97.4331%" y="911.50"></text></g><g><title>all (71 samples, 100%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="71"/><text x="0.2500%" y="1199.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (35 samples, 49.30%)</title><rect x="50.7042%" y="1173" width="49.2958%" height="15" fill="rgb(219,113,52)" fg:x="36" fg:w="35"/><text x="50.9542%" y="1183.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (35 samples, 49.30%)</title><rect x="50.7042%" y="1157" width="49.2958%" height="15" fill="rgb(214,7,15)" fg:x="36" fg:w="35"/><text x="50.9542%" y="1167.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>ti-smoked`std::sys::unix::thread::Thread::new::thread_start (35 samples, 49.30%)</title><rect x="50.7042%" y="1141" width="49.2958%" height="15" fill="rgb(235,32,4)" fg:x="36" fg:w="35"/><text x="50.9542%" y="1151.50">ti-smoked`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>ti-smoked`core::ops::function::FnOnce::call_once{{vtable.shim}} (35 samples, 49.30%)</title><rect x="50.7042%" y="1125" width="49.2958%" height="15" fill="rgb(238,90,54)" fg:x="36" fg:w="35"/><text x="50.9542%" y="1135.50">ti-smoked`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>ti-smoked`std::sys_common::backtrace::__rust_begin_short_backtrace (35 samples, 49.30%)</title><rect x="50.7042%" y="1109" width="49.2958%" height="15" fill="rgb(213,208,19)" fg:x="36" fg:w="35"/><text x="50.9542%" y="1119.50">ti-smoked`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>ti-smoked`tokio::runtime::task::raw::poll (1 samples, 1.41%)</title><rect x="98.5915%" y="1093" width="1.4085%" height="15" fill="rgb(233,156,4)" fg:x="70" fg:w="1"/><text x="98.8415%" y="1103.50"></text></g></svg></svg>